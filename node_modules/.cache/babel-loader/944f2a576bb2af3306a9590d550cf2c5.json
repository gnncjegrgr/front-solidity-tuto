{"ast":null,"code":"'use strict';\n\nconst defaultBase = self.location ? self.location.protocol + '//' + self.location.host : '';\nconst URL = self.URL;\n\nclass URLWithLegacySupport {\n  constructor() {\n    let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultBase;\n    this.super = new URL(url, base);\n    this.path = this.pathname + this.search;\n    this.auth = this.username && this.password ? this.username + ':' + this.password : null;\n    this.query = this.search && this.search.startsWith('?') ? this.search.slice(1) : null;\n  }\n\n  get hash() {\n    return this.super.hash;\n  }\n\n  get host() {\n    return this.super.host;\n  }\n\n  get hostname() {\n    return this.super.hostname;\n  }\n\n  get href() {\n    return this.super.href;\n  }\n\n  get origin() {\n    return this.super.origin;\n  }\n\n  get password() {\n    return this.super.password;\n  }\n\n  get pathname() {\n    return this.super.pathname;\n  }\n\n  get port() {\n    return this.super.port;\n  }\n\n  get protocol() {\n    return this.super.protocol;\n  }\n\n  get search() {\n    return this.super.search;\n  }\n\n  get searchParams() {\n    return this.super.searchParams;\n  }\n\n  get username() {\n    return this.super.username;\n  }\n\n  set hash(hash) {\n    this.super.hash = hash;\n  }\n\n  set host(host) {\n    this.super.host = host;\n  }\n\n  set hostname(hostname) {\n    this.super.hostname = hostname;\n  }\n\n  set href(href) {\n    this.super.href = href;\n  }\n\n  set origin(origin) {\n    this.super.origin = origin;\n  }\n\n  set password(password) {\n    this.super.password = password;\n  }\n\n  set pathname(pathname) {\n    this.super.pathname = pathname;\n  }\n\n  set port(port) {\n    this.super.port = port;\n  }\n\n  set protocol(protocol) {\n    this.super.protocol = protocol;\n  }\n\n  set search(search) {\n    this.super.search = search;\n  }\n\n  set searchParams(searchParams) {\n    this.super.searchParams = searchParams;\n  }\n\n  set username(username) {\n    this.super.username = username;\n  }\n\n  createObjectURL(o) {\n    return this.super.createObjectURL(o);\n  }\n\n  revokeObjectURL(o) {\n    this.super.revokeObjectURL(o);\n  }\n\n  toJSON() {\n    return this.super.toJSON();\n  }\n\n  toString() {\n    return this.super.toString();\n  }\n\n  format() {\n    return this.toString();\n  }\n\n}\n\nfunction format(obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj);\n    return url.toString();\n  }\n\n  if (!(obj instanceof URL)) {\n    const userPass = obj.username && obj.password ? `${obj.username}:${obj.password}@` : '';\n    const auth = obj.auth ? obj.auth + '@' : '';\n    const port = obj.port ? ':' + obj.port : '';\n    const protocol = obj.protocol ? obj.protocol + '//' : '';\n    const host = obj.host || '';\n    const hostname = obj.hostname || '';\n    const search = obj.search || (obj.query ? '?' + obj.query : '');\n    const hash = obj.hash || '';\n    const pathname = obj.pathname || '';\n    const path = obj.path || pathname + search;\n    return `${protocol}${userPass || auth}${host || hostname + port}${path}${hash}`;\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n};","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/iso-url/src/url-browser.js"],"names":["defaultBase","self","location","protocol","host","URL","URLWithLegacySupport","constructor","url","base","super","path","pathname","search","auth","username","password","query","startsWith","slice","hash","hostname","href","origin","port","searchParams","createObjectURL","o","revokeObjectURL","toJSON","toString","format","obj","userPass","module","exports","URLSearchParams"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nconst defaultBase = self.location ?\r\n    self.location.protocol + '//' + self.location.host :\r\n    '';\r\nconst URL = self.URL;\r\n\r\nclass URLWithLegacySupport {\r\n    constructor(url = '', base = defaultBase) {\r\n        this.super = new URL(url, base);\r\n        this.path = this.pathname + this.search;\r\n        this.auth =\r\n            this.username && this.password ?\r\n                this.username + ':' + this.password :\r\n                null;\r\n\r\n        this.query =\r\n            this.search && this.search.startsWith('?') ?\r\n                this.search.slice(1) :\r\n                null;\r\n    }\r\n\r\n    get hash() {\r\n        return this.super.hash;\r\n    }\r\n    get host() {\r\n        return this.super.host;\r\n    }\r\n    get hostname() {\r\n        return this.super.hostname;\r\n    }\r\n    get href() {\r\n        return this.super.href;\r\n    }\r\n    get origin() {\r\n        return this.super.origin;\r\n    }\r\n    get password() {\r\n        return this.super.password;\r\n    }\r\n    get pathname() {\r\n        return this.super.pathname;\r\n    }\r\n    get port() {\r\n        return this.super.port;\r\n    }\r\n    get protocol() {\r\n        return this.super.protocol;\r\n    }\r\n    get search() {\r\n        return this.super.search;\r\n    }\r\n    get searchParams() {\r\n        return this.super.searchParams;\r\n    }\r\n    get username() {\r\n        return this.super.username;\r\n    }\r\n\r\n    set hash(hash) {\r\n        this.super.hash = hash;\r\n    }\r\n    set host(host) {\r\n        this.super.host = host;\r\n    }\r\n    set hostname(hostname) {\r\n        this.super.hostname = hostname;\r\n    }\r\n    set href(href) {\r\n        this.super.href = href;\r\n    }\r\n    set origin(origin) {\r\n        this.super.origin = origin;\r\n    }\r\n    set password(password) {\r\n        this.super.password = password;\r\n    }\r\n    set pathname(pathname) {\r\n        this.super.pathname = pathname;\r\n    }\r\n    set port(port) {\r\n        this.super.port = port;\r\n    }\r\n    set protocol(protocol) {\r\n        this.super.protocol = protocol;\r\n    }\r\n    set search(search) {\r\n        this.super.search = search;\r\n    }\r\n    set searchParams(searchParams) {\r\n        this.super.searchParams = searchParams;\r\n    }\r\n    set username(username) {\r\n        this.super.username = username;\r\n    }\r\n\r\n    createObjectURL(o) {\r\n        return this.super.createObjectURL(o);\r\n    }\r\n    revokeObjectURL(o) {\r\n        this.super.revokeObjectURL(o);\r\n    }\r\n    toJSON() {\r\n        return this.super.toJSON();\r\n    }\r\n    toString() {\r\n        return this.super.toString();\r\n    }\r\n    format() {\r\n        return this.toString();\r\n    }\r\n}\r\n\r\nfunction format(obj) {\r\n    if (typeof obj === 'string') {\r\n        const url = new URL(obj);\r\n\r\n        return url.toString();\r\n    }\r\n\r\n    if (!(obj instanceof URL)) {\r\n        const userPass =\r\n            obj.username && obj.password ?\r\n                `${obj.username}:${obj.password}@` :\r\n                '';\r\n        const auth = obj.auth ? obj.auth + '@' : '';\r\n        const port = obj.port ? ':' + obj.port : '';\r\n        const protocol = obj.protocol ? obj.protocol + '//' : '';\r\n        const host = obj.host || '';\r\n        const hostname = obj.hostname || '';\r\n        const search = obj.search || (obj.query ? '?' + obj.query : '');\r\n        const hash = obj.hash || '';\r\n        const pathname = obj.pathname || '';\r\n        const path = obj.path || pathname + search;\r\n\r\n        return `${protocol}${userPass || auth}${host ||\r\n            hostname + port}${path}${hash}`;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    URLWithLegacySupport,\r\n    URLSearchParams: self.URLSearchParams,\r\n    defaultBase,\r\n    format\r\n};\r\n"]},"metadata":{},"sourceType":"script"}