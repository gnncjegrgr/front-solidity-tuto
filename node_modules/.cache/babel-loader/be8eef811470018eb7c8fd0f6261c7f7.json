{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimyo\\\\skkrypto project\\\\skkrypto-front-solidity\\\\src\\\\pages\\\\MakeNFT.js\";\nimport Caver from 'caver-js';\nimport { Button } from '@mui/material';\nimport { useEffect } from 'react';\nimport ST_ADDRESS from '../contractInfo/STCONTRACT/ADDRESS.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MakeNFT = () => {\n  const caver = new Caver(window.klaytn);\n  const feePayer = caver.klay.accounts.wallet.add( //클레이튼 개인키로 추가해줍니다.\n  '0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff');\n\n  const makeNFT = async () => {\n    const {\n      rawTransaction: senderRawTransaction\n    } = await caver.klay.signTransaction({\n      type: 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION',\n      from: window.klaytn.selectedAddress,\n      to: ST_ADDRESS,\n      data: STCONTRACT.methods.mintSToken('김용', 7, 2020312708, '개발팀', '2021', 'https://ipfs.infura.io/ipfs/Qmbw6Sv8w1gH48u4eKV8M9sEt76YgpCo2UdM69bUxZMS88', '2022-02-13').encodeABI(),\n      gas: '50000000',\n      value: caver.utils.toPeb('0', 'KLAY') //payable 타입이라면 \"0\"=>\"1\"\n\n    });\n    caver.klay.sendTransaction({\n      senderRawTransaction: senderRawTransaction,\n      feePayer: feePayer.address\n    }).then(function (receipt) {\n      console.log(receipt.transactionHash);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: makeNFT,\n      children: \"nft \\uB9CC\\uB4E4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = MakeNFT;\nexport default MakeNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeNFT\");","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/src/pages/MakeNFT.js"],"names":["Caver","Button","useEffect","ST_ADDRESS","MakeNFT","caver","window","klaytn","feePayer","klay","accounts","wallet","add","makeNFT","rawTransaction","senderRawTransaction","signTransaction","type","from","selectedAddress","to","data","STCONTRACT","methods","mintSToken","encodeABI","gas","value","utils","toPeb","sendTransaction","address","then","receipt","console","log","transactionHash"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,KAAK,GAAG,IAAIL,KAAJ,CAAUM,MAAM,CAACC,MAAjB,CAAd;AAEA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,GAA3B,EACf;AACA,sEAFe,CAAjB;;AAKA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAM;AAAEC,MAAAA,cAAc,EAAEC;AAAlB,QAA2C,MAAMV,KAAK,CAACI,IAAN,CAAWO,eAAX,CAA2B;AAChFC,MAAAA,IAAI,EAAE,wCAD0E;AAEhFC,MAAAA,IAAI,EAAEZ,MAAM,CAACC,MAAP,CAAcY,eAF4D;AAGhFC,MAAAA,EAAE,EAAEjB,UAH4E;AAIhFkB,MAAAA,IAAI,EAAEC,UAAU,CAACC,OAAX,CACHC,UADG,CACQ,IADR,EACc,CADd,EACiB,UADjB,EAC6B,KAD7B,EACoC,MADpC,EAC4C,4EAD5C,EAC0H,YAD1H,EAEHC,SAFG,EAJ0E;AAOhFC,MAAAA,GAAG,EAAE,UAP2E;AAQhFC,MAAAA,KAAK,EAAEtB,KAAK,CAACuB,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,MAAvB,CARyE,CAQzC;;AARyC,KAA3B,CAAvD;AAUAxB,IAAAA,KAAK,CAACI,IAAN,CACGqB,eADH,CACmB;AACff,MAAAA,oBAAoB,EAAEA,oBADP;AAEfP,MAAAA,QAAQ,EAAEA,QAAQ,CAACuB;AAFJ,KADnB,EAKGC,IALH,CAKQ,UAAUC,OAAV,EAAmB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,eAApB;AACD,KAPH;AAQD,GAnBD;;AAqBA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEvB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAlCD;;KAAMT,O;AAoCN,eAAeA,OAAf","sourcesContent":["import Caver from 'caver-js';\r\nimport { Button } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport ST_ADDRESS from '../contractInfo/STCONTRACT/ADDRESS.json';\r\nconst MakeNFT = () => {\r\n  const caver = new Caver(window.klaytn);\r\n\r\n  const feePayer = caver.klay.accounts.wallet.add(\r\n    //클레이튼 개인키로 추가해줍니다.\r\n    '0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff'\r\n  );\r\n\r\n  const makeNFT = async () => {\r\n    const { rawTransaction: senderRawTransaction } = await caver.klay.signTransaction({\r\n      type: 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION',\r\n      from: window.klaytn.selectedAddress,\r\n      to: ST_ADDRESS,\r\n      data: STCONTRACT.methods\r\n        .mintSToken('김용', 7, 2020312708, '개발팀', '2021', 'https://ipfs.infura.io/ipfs/Qmbw6Sv8w1gH48u4eKV8M9sEt76YgpCo2UdM69bUxZMS88', '2022-02-13')\r\n        .encodeABI(),\r\n      gas: '50000000',\r\n      value: caver.utils.toPeb('0', 'KLAY'), //payable 타입이라면 \"0\"=>\"1\"\r\n    });\r\n    caver.klay\r\n      .sendTransaction({\r\n        senderRawTransaction: senderRawTransaction,\r\n        feePayer: feePayer.address,\r\n      })\r\n      .then(function (receipt) {\r\n        console.log(receipt.transactionHash);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={makeNFT}>nft 만들기</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MakeNFT;\r\n"]},"metadata":{},"sourceType":"module"}