{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimyo\\\\skkrypto project\\\\frontend\\\\src\\\\pages\\\\MakeNFT.js\";\nimport Caver from \"caver-js\";\nimport { Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { STCONTRACT } from \"../variables\";\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MakeNFT = () => {\n  const caver = new Caver(window.klaytn);\n  const feePayer = caver.klay.accounts.wallet.add( //클레이튼 개인키로 추가해줍니다.\n  \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\");\n\n  const makeNFT = async () => {\n    const {\n      rawTransaction: senderRawTransaction\n    } = await caver.klay.signTransaction({\n      type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\n      from: window.klaytn.selectedAddress,\n      to: ST_ADDRESS,\n      data: STCONTRACT.methods.mintSToken(\"김용\", 7, 2020312708, \"개발팀\", \"2021\", \"https://ipfs.infura.io/ipfs/Qmbw6Sv8w1gH48u4eKV8M9sEt76YgpCo2UdM69bUxZMS88\", \"2022-02-13\").encodeABI(),\n      gas: \"50000000\",\n      value: caver.utils.toPeb(\"0\", \"KLAY\") //payable 타입이라면 \"0\"=>\"1\"\n\n    });\n    caver.klay.sendTransaction({\n      senderRawTransaction: senderRawTransaction,\n      feePayer: feePayer.address\n    }).then(function (receipt) {\n      console.log(receipt.transactionHash);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/makeNFT\",\n      children: \"Skkryptoken \\uB9CC\\uB4E4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/search\",\n      children: \"SkkrypToken \\uC870\\uD68C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: makeNFT,\n      children: \"nft \\uB9CC\\uB4E4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = MakeNFT;\nexport default MakeNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeNFT\");","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/frontend/src/pages/MakeNFT.js"],"names":["Caver","Button","useEffect","STCONTRACT","ST_ADDRESS","MakeNFT","caver","window","klaytn","feePayer","klay","accounts","wallet","add","makeNFT","rawTransaction","senderRawTransaction","signTransaction","type","from","selectedAddress","to","data","methods","mintSToken","encodeABI","gas","value","utils","toPeb","sendTransaction","address","then","receipt","console","log","transactionHash"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,0DAAvB;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,KAAK,GAAG,IAAIN,KAAJ,CAAUO,MAAM,CAACC,MAAjB,CAAd;AAEA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,GAA3B,EACf;AACA,sEAFe,CAAjB;;AAKA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAM;AAAEC,MAAAA,cAAc,EAAEC;AAAlB,QACJ,MAAMV,KAAK,CAACI,IAAN,CAAWO,eAAX,CAA2B;AAC/BC,MAAAA,IAAI,EAAE,wCADyB;AAE/BC,MAAAA,IAAI,EAAEZ,MAAM,CAACC,MAAP,CAAcY,eAFW;AAG/BC,MAAAA,EAAE,EAAEjB,UAH2B;AAI/BkB,MAAAA,IAAI,EAAEnB,UAAU,CAACoB,OAAX,CACHC,UADG,CAEF,IAFE,EAGF,CAHE,EAIF,UAJE,EAKF,KALE,EAMF,MANE,EAOF,4EAPE,EAQF,YARE,EAUHC,SAVG,EAJyB;AAe/BC,MAAAA,GAAG,EAAE,UAf0B;AAgB/BC,MAAAA,KAAK,EAAErB,KAAK,CAACsB,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,MAAvB,CAhBwB,CAgBQ;;AAhBR,KAA3B,CADR;AAmBAvB,IAAAA,KAAK,CAACI,IAAN,CACGoB,eADH,CACmB;AACfd,MAAAA,oBAAoB,EAAEA,oBADP;AAEfP,MAAAA,QAAQ,EAAEA,QAAQ,CAACsB;AAFJ,KADnB,EAKGC,IALH,CAKQ,UAAUC,OAAV,EAAmB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,eAApB;AACD,KAPH;AAQD,GA5BD;;AA8BA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEtB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CA9CD;;KAAMT,O;AAgDN,eAAeA,OAAf","sourcesContent":["import Caver from \"caver-js\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { STCONTRACT } from \"../variables\";\r\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\r\nconst MakeNFT = () => {\r\n  const caver = new Caver(window.klaytn);\r\n\r\n  const feePayer = caver.klay.accounts.wallet.add(\r\n    //클레이튼 개인키로 추가해줍니다.\r\n    \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\"\r\n  );\r\n\r\n  const makeNFT = async () => {\r\n    const { rawTransaction: senderRawTransaction } =\r\n      await caver.klay.signTransaction({\r\n        type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\r\n        from: window.klaytn.selectedAddress,\r\n        to: ST_ADDRESS,\r\n        data: STCONTRACT.methods\r\n          .mintSToken(\r\n            \"김용\",\r\n            7,\r\n            2020312708,\r\n            \"개발팀\",\r\n            \"2021\",\r\n            \"https://ipfs.infura.io/ipfs/Qmbw6Sv8w1gH48u4eKV8M9sEt76YgpCo2UdM69bUxZMS88\",\r\n            \"2022-02-13\"\r\n          )\r\n          .encodeABI(),\r\n        gas: \"50000000\",\r\n        value: caver.utils.toPeb(\"0\", \"KLAY\"), //payable 타입이라면 \"0\"=>\"1\"\r\n      });\r\n    caver.klay\r\n      .sendTransaction({\r\n        senderRawTransaction: senderRawTransaction,\r\n        feePayer: feePayer.address,\r\n      })\r\n      .then(function (receipt) {\r\n        console.log(receipt.transactionHash);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link href=\"/makeNFT\">Skkryptoken 만들기</Link>\r\n      <br />\r\n      <Link href=\"/search\">SkkrypToken 조회하기</Link>\r\n      <Button onClick={makeNFT}>nft 만들기</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MakeNFT;\r\n"]},"metadata":{},"sourceType":"module"}