{"ast":null,"code":"'use strict';\n\nconst promisify = require('promisify-es6');\n\nconst moduleConfig = require('./utils/module-config');\n\nmodule.exports = arg => {\n  const send = moduleConfig(arg);\n  return promisify((ipfs, ipns, callback) => {\n    if (typeof ipfs === 'function') {\n      callback = ipfs;\n      ipfs = null;\n    } else if (typeof ipns === 'function') {\n      callback = ipns;\n      ipns = null;\n    }\n\n    const opts = {};\n\n    if (ipfs) {\n      opts.f = ipfs;\n    }\n\n    if (ipns) {\n      opts.n = ipns;\n    }\n\n    send({\n      path: 'mount',\n      qs: opts\n    }, callback);\n  });\n};","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/ipfs-http-client/src/mount.js"],"names":["promisify","require","moduleConfig","module","exports","arg","send","ipfs","ipns","callback","opts","f","n","path","qs"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAA5B;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,GAAD,IAAS;AACxB,QAAMC,IAAI,GAAGJ,YAAY,CAACG,GAAD,CAAzB;AAEA,SAAOL,SAAS,CAAC,CAACO,IAAD,EAAOC,IAAP,EAAaC,QAAb,KAA0B;AACzC,QAAI,OAAOF,IAAP,KAAgB,UAApB,EAAgC;AAC9BE,MAAAA,QAAQ,GAAGF,IAAX;AACAA,MAAAA,IAAI,GAAG,IAAP;AACD,KAHD,MAGO,IAAI,OAAOC,IAAP,KAAgB,UAApB,EAAgC;AACrCC,MAAAA,QAAQ,GAAGD,IAAX;AACAA,MAAAA,IAAI,GAAG,IAAP;AACD;;AACD,UAAME,IAAI,GAAG,EAAb;;AACA,QAAIH,IAAJ,EAAU;AACRG,MAAAA,IAAI,CAACC,CAAL,GAASJ,IAAT;AACD;;AACD,QAAIC,IAAJ,EAAU;AACRE,MAAAA,IAAI,CAACE,CAAL,GAASJ,IAAT;AACD;;AAEDF,IAAAA,IAAI,CAAC;AACHO,MAAAA,IAAI,EAAE,OADH;AAEHC,MAAAA,EAAE,EAAEJ;AAFD,KAAD,EAGDD,QAHC,CAAJ;AAID,GApBe,CAAhB;AAqBD,CAxBD","sourcesContent":["'use strict'\r\n\r\nconst promisify = require('promisify-es6')\r\nconst moduleConfig = require('./utils/module-config')\r\n\r\nmodule.exports = (arg) => {\r\n  const send = moduleConfig(arg)\r\n\r\n  return promisify((ipfs, ipns, callback) => {\r\n    if (typeof ipfs === 'function') {\r\n      callback = ipfs\r\n      ipfs = null\r\n    } else if (typeof ipns === 'function') {\r\n      callback = ipns\r\n      ipns = null\r\n    }\r\n    const opts = {}\r\n    if (ipfs) {\r\n      opts.f = ipfs\r\n    }\r\n    if (ipns) {\r\n      opts.n = ipns\r\n    }\r\n\r\n    send({\r\n      path: 'mount',\r\n      qs: opts\r\n    }, callback)\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"script"}