{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimyo\\\\skkrypto project\\\\frontend\\\\src\\\\pages\\\\MainPage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Link } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport Caver from \"caver-js\";\nimport DEPLOYED_ABI from \"../contractInfo/IPFSCONTRACT/deployedABI.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainPage = () => {\n  _s();\n\n  const caver = new Caver(window.klaytn);\n  const IPFSCONTRACT = new caver.klay.Contract(DEPLOYED_ABI, \"0x469f65e038A41fC36eCfBf0C366131bF87892388\");\n  const [kasAccount, setKasAccount] = useState();\n  useEffect(() => {}, []);\n\n  const activateKaikas = async () => {\n    const accounts = await window.klaytn.enable();\n    setKasAccount(accounts[0]);\n  };\n\n  const signTransaction = () => {\n    caver.klay.sendTransaction({\n      type: \"VALUE_TRANSFER\",\n      from: window.klaytn.selectedAddress,\n      to: \"0xda885688cffbe34536482696ab9aac93fa330596\",\n      value: caver.utils.toPeb(\"1\", \"peb\"),\n      gas: 800000\n    }).once(\"transactionHash\", transactionHash => {\n      console.log(\"txHash\", transactionHash);\n    }).once(\"receipt\", receipt => {\n      console.log(\"receipt\", receipt);\n    }).once(\"error\", error => {\n      console.log(\"error\", error);\n    });\n  };\n\n  const signTransactionSmartContractExe = async () => {\n    const data = caver.klay.abi.encodeFunctionCall({\n      name: \"setIpfsAddress\",\n      type: \"function\",\n      inputs: [{\n        type: \"string\",\n        name: \"date\"\n      }, {\n        type: \"string\",\n        name: \"ipfs\"\n      }]\n    }, [\"helloworld!\", \"what?\"]);\n    caver.klay.sendTransaction({\n      type: \"SMART_CONTRACT_EXECUTION\",\n      from: window.klaytn.selectedAddress,\n      to: \"0x469f65e038A41fC36eCfBf0C366131bF87892388\",\n      gas: \"8000000\",\n      data\n    });\n  };\n\n  const checkResult = async () => {\n    const vari = await IPFSCONTRACT.methods.getIpfsAddress(\"helloworld!\").call();\n    console.log(vari);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/makeNFT\",\n      children: \"Skkryptoken \\uB9CC\\uB4E4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/Search\",\n      children: \"SkkrypToken \\uC870\\uD68C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC04\\uB2E8\\uD55C metamask \\uC2E4\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: async () => await activate(injected),\n      children: \"\\uBA54\\uD0C0\\uB9C8\\uC2A4\\uD06C \\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC04\\uB2E8\\uD55C kaikas \\uC2E4\\uC2B5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: activateKaikas,\n      children: \"\\uCE74\\uC774\\uCE74\\uC2A4 \\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: kasAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: signTransaction,\n      children: \"value transfer \\uD2B8\\uB79C\\uC7AD\\uC158 \\uC11C\\uBA85\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: signTransactionSmartContractExe,\n      children: \"\\uC2A4\\uB9C8\\uD2B8 \\uCEE8\\uD2B8\\uB799\\uD2B8 \\uD2B8\\uB79C\\uC7AD\\uC158 send\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: checkResult,\n      children: \"\\uC2A4\\uB9C8\\uD2B8 \\uCEE8\\uD2B8\\uB799\\uD2B8 \\uD2B8\\uB79C\\uC7AD\\uC158 \\uACB0\\uACFC \\uD655\\uC778\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MainPage, \"HiqXE0DGx3YsGL2e0JIi2Kd1j8U=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/frontend/src/pages/MainPage.js"],"names":["Button","Link","useEffect","useState","Caver","DEPLOYED_ABI","MainPage","caver","window","klaytn","IPFSCONTRACT","klay","Contract","kasAccount","setKasAccount","activateKaikas","accounts","enable","signTransaction","sendTransaction","type","from","selectedAddress","to","value","utils","toPeb","gas","once","transactionHash","console","log","receipt","error","signTransactionSmartContractExe","data","abi","encodeFunctionCall","name","inputs","checkResult","vari","methods","getIpfsAddress","call","activate","injected"],"mappings":"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","sourcesContent":["import { Button, Link } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Caver from \"caver-js\";\r\nimport DEPLOYED_ABI from \"../contractInfo/IPFSCONTRACT/deployedABI.json\";\r\n\r\nconst MainPage = () => {\r\n  const caver = new Caver(window.klaytn);\r\n  const IPFSCONTRACT = new caver.klay.Contract(\r\n    DEPLOYED_ABI,\r\n    \"0x469f65e038A41fC36eCfBf0C366131bF87892388\"\r\n  );\r\n  const [kasAccount, setKasAccount] = useState();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const activateKaikas = async () => {\r\n    const accounts = await window.klaytn.enable();\r\n    setKasAccount(accounts[0]);\r\n  };\r\n\r\n  const signTransaction = () => {\r\n    caver.klay\r\n      .sendTransaction({\r\n        type: \"VALUE_TRANSFER\",\r\n        from: window.klaytn.selectedAddress,\r\n        to: \"0xda885688cffbe34536482696ab9aac93fa330596\",\r\n        value: caver.utils.toPeb(\"1\", \"peb\"),\r\n        gas: 800000,\r\n      })\r\n      .once(\"transactionHash\", (transactionHash) => {\r\n        console.log(\"txHash\", transactionHash);\r\n      })\r\n      .once(\"receipt\", (receipt) => {\r\n        console.log(\"receipt\", receipt);\r\n      })\r\n      .once(\"error\", (error) => {\r\n        console.log(\"error\", error);\r\n      });\r\n  };\r\n\r\n  const signTransactionSmartContractExe = async () => {\r\n    const data = caver.klay.abi.encodeFunctionCall(\r\n      {\r\n        name: \"setIpfsAddress\",\r\n        type: \"function\",\r\n        inputs: [\r\n          {\r\n            type: \"string\",\r\n            name: \"date\",\r\n          },\r\n          {\r\n            type: \"string\",\r\n            name: \"ipfs\",\r\n          },\r\n        ],\r\n      },\r\n      [\"helloworld!\", \"what?\"]\r\n    );\r\n\r\n    caver.klay.sendTransaction({\r\n      type: \"SMART_CONTRACT_EXECUTION\",\r\n      from: window.klaytn.selectedAddress,\r\n      to: \"0x469f65e038A41fC36eCfBf0C366131bF87892388\",\r\n      gas: \"8000000\",\r\n      data,\r\n    });\r\n  };\r\n\r\n  const checkResult = async () => {\r\n    const vari = await IPFSCONTRACT.methods\r\n      .getIpfsAddress(\"helloworld!\")\r\n      .call();\r\n    console.log(vari);\r\n  };\r\n  return (\r\n    <>\r\n      <Link href=\"/makeNFT\">Skkryptoken 만들기</Link>\r\n      <br />\r\n      <Link href=\"/Search\">SkkrypToken 조회하기</Link>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <div>간단한 metamask 실습</div>\r\n      <Button onClick={async () => await activate(injected)}>\r\n        메타마스크 로그인\r\n      </Button>\r\n      <div>간단한 kaikas 실습</div>\r\n      <Button onClick={activateKaikas}>카이카스 로그인</Button>\r\n      <div>{kasAccount}</div>\r\n      <Button onClick={signTransaction}>\r\n        value transfer 트랜잭션 서명하기\r\n      </Button>\r\n      <br />\r\n      <Button onClick={signTransactionSmartContractExe}>\r\n        스마트 컨트랙트 트랜잭션 send하기\r\n      </Button>\r\n      <Button onClick={checkResult}>\r\n        스마트 컨트랙트 트랜잭션 결과 확인하기\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"]},"metadata":{},"sourceType":"module"}