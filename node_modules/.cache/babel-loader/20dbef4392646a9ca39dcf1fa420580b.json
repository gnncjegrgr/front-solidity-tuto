{"ast":null,"code":"'use strict';\n\nconst {\n  objectToQuery\n} = require('../lib/querystring');\n\nconst configure = require('../lib/configure');\n\nconst {\n  ok\n} = require('../lib/fetch');\n\nmodule.exports = configure(_ref => {\n  let {\n    fetch,\n    apiUrl,\n    apiPath,\n    headers\n  } = _ref;\n  return async (topic, options) => {\n    if (!options && typeof topic === 'object') {\n      options = topic;\n      topic = null;\n    }\n\n    options = options || {};\n    const qs = objectToQuery({\n      arg: topic,\n      ...(options.qs || {})\n    });\n    const url = `${apiUrl}${apiPath}/pubsub/peers${qs}`;\n    const res = await ok(fetch(url, {\n      signal: options.signal,\n      headers: options.headers || headers\n    }));\n    const data = await res.json();\n    return data.Strings || [];\n  };\n});","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/ipfs-http-client-lite/src/pubsub/peers.js"],"names":["objectToQuery","require","configure","ok","module","exports","fetch","apiUrl","apiPath","headers","topic","options","qs","arg","url","res","signal","data","json","Strings"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,oBAAD,CAAjC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAASF,OAAO,CAAC,cAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,QAAyC;AAAA,MAAxC;AAAEI,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,GAAwC;AAClE,SAAO,OAAOC,KAAP,EAAcC,OAAd,KAA0B;AAC/B,QAAI,CAACA,OAAD,IAAY,OAAOD,KAAP,KAAiB,QAAjC,EAA2C;AACzCC,MAAAA,OAAO,GAAGD,KAAV;AACAA,MAAAA,KAAK,GAAG,IAAR;AACD;;AAEDC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMC,EAAE,GAAGZ,aAAa,CAAC;AACvBa,MAAAA,GAAG,EAAEH,KADkB;AAEvB,UAAIC,OAAO,CAACC,EAAR,IAAc,EAAlB;AAFuB,KAAD,CAAxB;AAKA,UAAME,GAAG,GAAI,GAAEP,MAAO,GAAEC,OAAQ,gBAAeI,EAAG,EAAlD;AACA,UAAMG,GAAG,GAAG,MAAMZ,EAAE,CAACG,KAAK,CAACQ,GAAD,EAAM;AAC9BE,MAAAA,MAAM,EAAEL,OAAO,CAACK,MADc;AAE9BP,MAAAA,OAAO,EAAEE,OAAO,CAACF,OAAR,IAAmBA;AAFE,KAAN,CAAN,CAApB;AAIA,UAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAI,CAACE,OAAL,IAAgB,EAAvB;AACD,GApBD;AAqBD,CAtByB,CAA1B","sourcesContent":["'use strict'\r\n\r\nconst { objectToQuery } = require('../lib/querystring')\r\nconst configure = require('../lib/configure')\r\nconst { ok } = require('../lib/fetch')\r\n\r\nmodule.exports = configure(({ fetch, apiUrl, apiPath, headers }) => {\r\n  return async (topic, options) => {\r\n    if (!options && typeof topic === 'object') {\r\n      options = topic\r\n      topic = null\r\n    }\r\n\r\n    options = options || {}\r\n\r\n    const qs = objectToQuery({\r\n      arg: topic,\r\n      ...(options.qs || {})\r\n    })\r\n\r\n    const url = `${apiUrl}${apiPath}/pubsub/peers${qs}`\r\n    const res = await ok(fetch(url, {\r\n      signal: options.signal,\r\n      headers: options.headers || headers\r\n    }))\r\n    const data = await res.json()\r\n    return data.Strings || []\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"script"}