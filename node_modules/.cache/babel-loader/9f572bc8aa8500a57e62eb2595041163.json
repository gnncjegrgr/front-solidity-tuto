{"ast":null,"code":"import Caver from \"caver-js\";\nimport DEPLOYED_ABI from \"../contractInfo/IPFSCONTRACT/deployedABI.json\";\nimport DEPLOYED_ADDRESS from \"../contractInfo/IPFSCONTRACT/deployedAddress.json\";\nconst config = {\n  rpcURL: \"https://api.baobab.klaytn.net:8651\"\n};\nconst cav = new Caver(config.rpcURL);\nconst IPFSCONTRACT = new cav.klay.Contract(DEPLOYED_ABI, DEPLOYED_ADDRESS[\"key\"]);\n\nlet ipfsClient = require(\"ipfs-http-client\");\n\nlet ipfs = ipfsClient({\n  host: \"ipfs.infura.io\",\n  port: \"5001\",\n  protocol: \"https\"\n});\nexport { cav, IPFSCONTRACT, ipfs };","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/frontend/src/variables/index.js"],"names":["Caver","DEPLOYED_ABI","DEPLOYED_ADDRESS","config","rpcURL","cav","IPFSCONTRACT","klay","Contract","ipfsClient","require","ipfs","host","port","protocol"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,gBAAP,MAA6B,mDAA7B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE;AADK,CAAf;AAGA,MAAMC,GAAG,GAAG,IAAIL,KAAJ,CAAUG,MAAM,CAACC,MAAjB,CAAZ;AACA,MAAME,YAAY,GAAG,IAAID,GAAG,CAACE,IAAJ,CAASC,QAAb,CACnBP,YADmB,EAEnBC,gBAAgB,CAAC,KAAD,CAFG,CAArB;;AAKA,IAAIO,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAIC,IAAI,GAAGF,UAAU,CAAC;AACpBG,EAAAA,IAAI,EAAE,gBADc;AAEpBC,EAAAA,IAAI,EAAE,MAFc;AAGpBC,EAAAA,QAAQ,EAAE;AAHU,CAAD,CAArB;AAMA,SAAST,GAAT,EAAcC,YAAd,EAA4BK,IAA5B","sourcesContent":["import Caver from \"caver-js\";\r\nimport DEPLOYED_ABI from \"../contractInfo/IPFSCONTRACT/deployedABI.json\";\r\nimport DEPLOYED_ADDRESS from \"../contractInfo/IPFSCONTRACT/deployedAddress.json\";\r\n\r\nconst config = {\r\n  rpcURL: \"https://api.baobab.klaytn.net:8651\",\r\n};\r\nconst cav = new Caver(config.rpcURL);\r\nconst IPFSCONTRACT = new cav.klay.Contract(\r\n  DEPLOYED_ABI,\r\n  DEPLOYED_ADDRESS[\"key\"]\r\n);\r\n\r\nlet ipfsClient = require(\"ipfs-http-client\");\r\nlet ipfs = ipfsClient({\r\n  host: \"ipfs.infura.io\",\r\n  port: \"5001\",\r\n  protocol: \"https\",\r\n});\r\n\r\nexport { cav, IPFSCONTRACT, ipfs };\r\n"]},"metadata":{},"sourceType":"module"}