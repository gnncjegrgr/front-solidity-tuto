{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst withIs = require('class-is');\n/**\r\n * Represents an immutable block of data that is uniquely referenced with a cid.\r\n *\r\n * @constructor\r\n * @param {Buffer} data - The data to be stored in the block as a buffer.\r\n * @param {CID} cid - The cid of the data\r\n *\r\n * @example\r\n * const block = new Block(new Buffer('a012d83b20f9371...'))\r\n */\n\n\nclass Block {\n  constructor(data, cid) {\n    if (!data || !Buffer.isBuffer(data)) {\n      throw new Error('first argument  must be a buffer');\n    }\n\n    if (!cid || !CID.isCID(cid)) {\n      throw new Error('second argument must be a CID');\n    }\n\n    this._data = data;\n    this._cid = cid;\n  }\n  /**\r\n   * The data of this block.\r\n   *\r\n   * @type {Buffer}\r\n   */\n\n\n  get data() {\n    return this._data;\n  }\n\n  set data(val) {\n    throw new Error('Tried to change an immutable block');\n  }\n  /**\r\n   * The cid of the data this block represents.\r\n   *\r\n   * @type {CID}\r\n   */\n\n\n  get cid() {\n    return this._cid;\n  }\n\n  set cid(val) {\n    throw new Error('Tried to change an immutable block');\n  }\n\n}\n\nmodule.exports = withIs(Block, {\n  className: 'Block',\n  symbolName: '@ipfs/js-ipfs-block/block'\n});","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/ipfs-block/src/index.js"],"names":["CID","require","withIs","Block","constructor","data","cid","Buffer","isBuffer","Error","isCID","_data","_cid","val","module","exports","className","symbolName"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,KAAN,CAAY;AACVC,EAAAA,WAAW,CAAEC,IAAF,EAAQC,GAAR,EAAa;AACtB,QAAI,CAACD,IAAD,IAAS,CAACE,MAAM,CAACC,QAAP,CAAgBH,IAAhB,CAAd,EAAqC;AACnC,YAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,QAAI,CAACH,GAAD,IAAQ,CAACN,GAAG,CAACU,KAAJ,CAAUJ,GAAV,CAAb,EAA6B;AAC3B,YAAM,IAAIG,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,SAAKE,KAAL,GAAaN,IAAb;AACA,SAAKO,IAAL,GAAYN,GAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;AACU,MAAJD,IAAI,GAAI;AACV,WAAO,KAAKM,KAAZ;AACD;;AAEO,MAAJN,IAAI,CAAEQ,GAAF,EAAO;AACb,UAAM,IAAIJ,KAAJ,CAAU,oCAAV,CAAN;AACD;AAED;AACF;AACA;AACA;AACA;;;AACS,MAAHH,GAAG,GAAI;AACT,WAAO,KAAKM,IAAZ;AACD;;AAEM,MAAHN,GAAG,CAAEO,GAAF,EAAO;AACZ,UAAM,IAAIJ,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAtCS;;AAyCZK,MAAM,CAACC,OAAP,GAAiBb,MAAM,CAACC,KAAD,EAAQ;AAAEa,EAAAA,SAAS,EAAE,OAAb;AAAsBC,EAAAA,UAAU,EAAE;AAAlC,CAAR,CAAvB","sourcesContent":["'use strict'\r\n\r\nconst CID = require('cids')\r\nconst withIs = require('class-is')\r\n\r\n/**\r\n * Represents an immutable block of data that is uniquely referenced with a cid.\r\n *\r\n * @constructor\r\n * @param {Buffer} data - The data to be stored in the block as a buffer.\r\n * @param {CID} cid - The cid of the data\r\n *\r\n * @example\r\n * const block = new Block(new Buffer('a012d83b20f9371...'))\r\n */\r\nclass Block {\r\n  constructor (data, cid) {\r\n    if (!data || !Buffer.isBuffer(data)) {\r\n      throw new Error('first argument  must be a buffer')\r\n    }\r\n\r\n    if (!cid || !CID.isCID(cid)) {\r\n      throw new Error('second argument must be a CID')\r\n    }\r\n\r\n    this._data = data\r\n    this._cid = cid\r\n  }\r\n\r\n  /**\r\n   * The data of this block.\r\n   *\r\n   * @type {Buffer}\r\n   */\r\n  get data () {\r\n    return this._data\r\n  }\r\n\r\n  set data (val) {\r\n    throw new Error('Tried to change an immutable block')\r\n  }\r\n\r\n  /**\r\n   * The cid of the data this block represents.\r\n   *\r\n   * @type {CID}\r\n   */\r\n  get cid () {\r\n    return this._cid\r\n  }\r\n\r\n  set cid (val) {\r\n    throw new Error('Tried to change an immutable block')\r\n  }\r\n}\r\n\r\nmodule.exports = withIs(Block, { className: 'Block', symbolName: '@ipfs/js-ipfs-block/block' })\r\n"]},"metadata":{},"sourceType":"script"}