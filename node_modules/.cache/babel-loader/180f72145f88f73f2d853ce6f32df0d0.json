{"ast":null,"code":"'use strict';\n/**\r\n * Adds a link with its name as property to an object.\r\n *\r\n * The link won't be added if its name is empty or matches one of the existing\r\n * properties.\r\n *\r\n * @param {Object} object - The object that contains an array of links\r\n * @param {string} name - The name of the link to add\r\n * @param {numner} position - The position within the array of links\r\n */\n\nconst addNamedLink = (object, name, position) => {\n  const skipNames = ['', ...Object.keys(object)];\n\n  if (skipNames.includes(name)) {\n    return;\n  }\n\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    configurable: true,\n    get: () => object._links[position].Hash\n  });\n};\n\nmodule.exports = addNamedLink;","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/ipld-dag-pb/src/dag-node/addNamedLink.js"],"names":["addNamedLink","object","name","position","skipNames","Object","keys","includes","defineProperty","enumerable","configurable","get","_links","Hash","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMA,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,KAA4B;AAC/C,QAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,CAAR,CAAlB;;AACA,MAAIG,SAAS,CAACG,QAAV,CAAmBL,IAAnB,CAAJ,EAA8B;AAC5B;AACD;;AACDG,EAAAA,MAAM,CAACG,cAAP,CAAsBP,MAAtB,EAA8BC,IAA9B,EAAoC;AAClCO,IAAAA,UAAU,EAAE,IADsB;AAElCC,IAAAA,YAAY,EAAE,IAFoB;AAGlCC,IAAAA,GAAG,EAAE,MAAMV,MAAM,CAACW,MAAP,CAAcT,QAAd,EAAwBU;AAHD,GAApC;AAKD,CAVD;;AAYAC,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["'use strict'\r\n\r\n/**\r\n * Adds a link with its name as property to an object.\r\n *\r\n * The link won't be added if its name is empty or matches one of the existing\r\n * properties.\r\n *\r\n * @param {Object} object - The object that contains an array of links\r\n * @param {string} name - The name of the link to add\r\n * @param {numner} position - The position within the array of links\r\n */\r\nconst addNamedLink = (object, name, position) => {\r\n  const skipNames = ['', ...Object.keys(object)]\r\n  if (skipNames.includes(name)) {\r\n    return\r\n  }\r\n  Object.defineProperty(object, name, {\r\n    enumerable: true,\r\n    configurable: true,\r\n    get: () => object._links[position].Hash\r\n  })\r\n}\r\n\r\nmodule.exports = addNamedLink\r\n"]},"metadata":{},"sourceType":"script"}