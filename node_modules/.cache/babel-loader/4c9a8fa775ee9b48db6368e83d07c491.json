{"ast":null,"code":"'use strict'; // Based on npmjs.com/nodeify but without additional `nextTick` calls\n// to keep the overhead low\n\nmodule.exports = function nodeify(promise, cb) {\n  return promise.then(res => {\n    cb(null, res);\n  }, err => {\n    cb(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/libp2p-crypto/src/nodeify.js"],"names":["module","exports","nodeify","promise","cb","then","res","err"],"mappings":"AAAA,a,CAEA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,OAAT,CAAkBC,OAAlB,EAA2BC,EAA3B,EAA+B;AAC9C,SAAOD,OAAO,CAACE,IAAR,CAAcC,GAAD,IAAS;AAC3BF,IAAAA,EAAE,CAAC,IAAD,EAAOE,GAAP,CAAF;AACD,GAFM,EAEHC,GAAD,IAAS;AACVH,IAAAA,EAAE,CAACG,GAAD,CAAF;AACD,GAJM,CAAP;AAKD,CAND","sourcesContent":["'use strict'\r\n\r\n// Based on npmjs.com/nodeify but without additional `nextTick` calls\r\n// to keep the overhead low\r\nmodule.exports = function nodeify (promise, cb) {\r\n  return promise.then((res) => {\r\n    cb(null, res)\r\n  }, (err) => {\r\n    cb(err)\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"script"}