{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar varint$1 = require('../vendor/varint.js');\n\nconst decode = data => {\n  const code = varint$1.decode(data);\n  return [code, varint$1.decode.bytes];\n};\n\nconst encodeTo = function (int, target) {\n  let offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  varint$1.encode(int, target, offset);\n  return target;\n};\n\nconst encodingLength = int => {\n  return varint$1.encodingLength(int);\n};\n\nexports.decode = decode;\nexports.encodeTo = encodeTo;\nexports.encodingLength = encodingLength;","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/multiformats/cjs/src/varint.js"],"names":["Object","defineProperty","exports","value","varint$1","require","decode","data","code","bytes","encodeTo","int","target","offset","encode","encodingLength"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,qBAAD,CAAtB;;AAEA,MAAMC,MAAM,GAAGC,IAAI,IAAI;AACrB,QAAMC,IAAI,GAAGJ,QAAQ,CAACE,MAAT,CAAgBC,IAAhB,CAAb;AACA,SAAO,CACLC,IADK,EAELJ,QAAQ,CAACE,MAAT,CAAgBG,KAFX,CAAP;AAID,CAND;;AAOA,MAAMC,QAAQ,GAAG,UAACC,GAAD,EAAMC,MAAN,EAA6B;AAAA,MAAfC,MAAe,uEAAN,CAAM;AAC5CT,EAAAA,QAAQ,CAACU,MAAT,CAAgBH,GAAhB,EAAqBC,MAArB,EAA6BC,MAA7B;AACA,SAAOD,MAAP;AACD,CAHD;;AAIA,MAAMG,cAAc,GAAGJ,GAAG,IAAI;AAC5B,SAAOP,QAAQ,CAACW,cAAT,CAAwBJ,GAAxB,CAAP;AACD,CAFD;;AAIAT,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACAJ,OAAO,CAACQ,QAAR,GAAmBA,QAAnB;AACAR,OAAO,CAACa,cAAR,GAAyBA,cAAzB","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\n\r\nvar varint$1 = require('../vendor/varint.js');\r\n\r\nconst decode = data => {\r\n  const code = varint$1.decode(data);\r\n  return [\r\n    code,\r\n    varint$1.decode.bytes\r\n  ];\r\n};\r\nconst encodeTo = (int, target, offset = 0) => {\r\n  varint$1.encode(int, target, offset);\r\n  return target;\r\n};\r\nconst encodingLength = int => {\r\n  return varint$1.encodingLength(int);\r\n};\r\n\r\nexports.decode = decode;\r\nexports.encodeTo = encodeTo;\r\nexports.encodingLength = encodingLength;\r\n"]},"metadata":{},"sourceType":"script"}