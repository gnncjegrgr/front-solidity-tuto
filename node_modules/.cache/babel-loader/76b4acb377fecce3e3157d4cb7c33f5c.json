{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimyo\\\\skkrypto project\\\\frontend\\\\src\\\\pages\\\\Search.js\";\nimport Caver from \"caver-js\";\nimport { Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { STCONTRACT } from \"../variables\";\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  const caver = new Caver(window.klaytn);\n  const feePayer = caver.klay.accounts.wallet.add( //클레이튼 개인키로 추가해줍니다.\n  \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\");\n\n  const checkKimyong = async () => {\n    let res1 = await STCONTRACT.methods.getST(2020312708).call();\n    console.log(res1[0]);\n  };\n\n  const alreadyCreated = async () => {\n    let res1 = await STCONTRACT.methods.isTokenAlreadyCreated(2020312708).call();\n    console.log(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: checkKimyong,\n      children: \"\\uAE40\\uC6A9 \\uC815\\uBCF4 \\uD655\\uC778\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: alreadyCreated,\n      children: \"\\uAE40\\uC6A9 \\uB9CC\\uB4E4\\uC5B4\\uC84C\\uB294\\uC9C0 \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/frontend/src/pages/Search.js"],"names":["Caver","Button","useEffect","STCONTRACT","ST_ADDRESS","Search","caver","window","klaytn","feePayer","klay","accounts","wallet","add","checkKimyong","res1","methods","getST","call","console","log","alreadyCreated","isTokenAlreadyCreated","res"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,0DAAvB;;;;AACA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,KAAK,GAAG,IAAIN,KAAJ,CAAUO,MAAM,CAACC,MAAjB,CAAd;AAEA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,GAA3B,EACf;AACA,sEAFe,CAAjB;;AAKA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAIC,IAAI,GAAG,MAAMZ,UAAU,CAACa,OAAX,CAAmBC,KAAnB,CAAyB,UAAzB,EAAqCC,IAArC,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAAC,CAAD,CAAhB;AACD,GAHD;;AAKA,QAAMM,cAAc,GAAG,YAAY;AACjC,QAAIN,IAAI,GAAG,MAAMZ,UAAU,CAACa,OAAX,CACdM,qBADc,CACQ,UADR,EAEdJ,IAFc,EAAjB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEO,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CA1BD;;KAAMhB,M;AA4BN,eAAeA,MAAf","sourcesContent":["import Caver from \"caver-js\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { STCONTRACT } from \"../variables\";\r\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\r\nconst Search = () => {\r\n  const caver = new Caver(window.klaytn);\r\n\r\n  const feePayer = caver.klay.accounts.wallet.add(\r\n    //클레이튼 개인키로 추가해줍니다.\r\n    \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\"\r\n  );\r\n\r\n  const checkKimyong = async () => {\r\n    let res1 = await STCONTRACT.methods.getST(2020312708).call();\r\n    console.log(res1[0]);\r\n  };\r\n\r\n  const alreadyCreated = async () => {\r\n    let res1 = await STCONTRACT.methods\r\n      .isTokenAlreadyCreated(2020312708)\r\n      .call();\r\n    console.log(res);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={checkKimyong}>김용 정보 확인하기</Button>\r\n      <Button onClick={alreadyCreated}>김용 만들어졌는지 확인</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}