{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimyo\\\\skkrypto project\\\\frontend\\\\src\\\\pages\\\\Sell.js\",\n    _s = $RefreshSig$();\n\nimport Caver from \"caver-js\";\nimport { Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { STCONTRACT, TSCONTRACT, YTTCONTRACT } from \"../variables\";\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\nimport TS_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/TOKENSALES_ADDRESS.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Sell = () => {\n  _s();\n\n  const caver = new Caver(window.klaytn);\n  window.klaytn.enable();\n  useEffect(() => {\n    YTTCONTRACT.methods.setApprovalForAll(DEPLOYED_ADDRESS_TOKENSALES, true).send({\n      from: window.selectedAddress,\n      gas: \"250000\"\n    }).then(receipt => {\n      console.log(receipt.transactionHash);\n    });\n  }, []);\n  const feePayer = caver.klay.accounts.wallet.add( //클레이튼 개인키로 추가해줍니다.\n  \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\");\n\n  const approve = async () => {\n    STCONTRACT.methods.setApprovalForAll(TS_ADDRESS, true).send({\n      from: window.klaytn.selectedAddress,\n      gas: \"250000\"\n    }).then(receipt => {\n      console.log(receipt);\n    });\n  };\n\n  const cancelApprove = async () => {\n    STCONTRACT.methods.setApprovalForAll(TS_ADDRESS, false).send({\n      from: window.klaytn.selectedAddress,\n      gas: \"250000\"\n    }).then(receipt => {\n      console.log(receipt);\n    });\n  };\n\n  const sellToken = async () => {\n    const {\n      rawTransaction: senderRawTransaction\n    } = await caver.klay.signTransaction({\n      type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\n      from: window.klaytn.selectedAddress,\n      to: TS_ADDRESS,\n      data: TSCONTRACT.methods.setForSale(2020312708, caver.utils.toPeb(\"1\", \"peb\")).encodeABI(),\n      gas: \"500000\",\n      value: caver.utils.toPeb(\"0\", \"KLAY\") // payable 타입일때는 1\n\n    });\n    caver.klay.sendTransaction({\n      senderRawTransaction: senderRawTransaction,\n      feePayer: feePayer.address\n    }).then(function (receipt) {\n      if (receipt.transactionHash) {\n        console.log(receipt.transactionHash);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: approve,\n      children: \"\\uCEE8\\uD2B8\\uB799\\uD2B8\\uC5D0 \\uD310\\uB9E4\\uAD8C\\uD55C \\uC8FC\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: cancelApprove,\n      children: \"\\uCEE8\\uD2B8\\uB799\\uD2B8\\uC5D0 \\uD310\\uB9E4 \\uAD8C\\uD55C \\uCDE8\\uC18C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: sellToken,\n      children: \"\\uB0B4 \\uD1A0\\uD070 \\uD310\\uB9E4\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Sell, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Sell;\nexport default Sell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sell\");","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/frontend/src/pages/Sell.js"],"names":["Caver","Button","useEffect","STCONTRACT","TSCONTRACT","YTTCONTRACT","ST_ADDRESS","TS_ADDRESS","Sell","caver","window","klaytn","enable","methods","setApprovalForAll","DEPLOYED_ADDRESS_TOKENSALES","send","from","selectedAddress","gas","then","receipt","console","log","transactionHash","feePayer","klay","accounts","wallet","add","approve","cancelApprove","sellToken","rawTransaction","senderRawTransaction","signTransaction","type","to","data","setForSale","utils","toPeb","encodeABI","value","sendTransaction","address"],"mappings":"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","sourcesContent":["import Caver from \"caver-js\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { STCONTRACT, TSCONTRACT, YTTCONTRACT } from \"../variables\";\r\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\r\nimport TS_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/TOKENSALES_ADDRESS.json\";\r\n\r\nconst Sell = () => {\r\n  const caver = new Caver(window.klaytn);\r\n  window.klaytn.enable();\r\n\r\n  useEffect(() => {\r\n    YTTCONTRACT.methods\r\n      .setApprovalForAll(DEPLOYED_ADDRESS_TOKENSALES, true)\r\n      .send({\r\n        from: window.selectedAddress,\r\n        gas: \"250000\",\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt.transactionHash);\r\n      });\r\n  }, []);\r\n\r\n  const feePayer = caver.klay.accounts.wallet.add(\r\n    //클레이튼 개인키로 추가해줍니다.\r\n    \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\"\r\n  );\r\n\r\n  const approve = async () => {\r\n    STCONTRACT.methods\r\n      .setApprovalForAll(TS_ADDRESS, true)\r\n      .send({\r\n        from: window.klaytn.selectedAddress,\r\n        gas: \"250000\",\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n      });\r\n  };\r\n\r\n  const cancelApprove = async () => {\r\n    STCONTRACT.methods\r\n      .setApprovalForAll(TS_ADDRESS, false)\r\n      .send({\r\n        from: window.klaytn.selectedAddress,\r\n        gas: \"250000\",\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n      });\r\n  };\r\n\r\n  const sellToken = async () => {\r\n    const { rawTransaction: senderRawTransaction } =\r\n      await caver.klay.signTransaction({\r\n        type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\r\n        from: window.klaytn.selectedAddress,\r\n        to: TS_ADDRESS,\r\n        data: TSCONTRACT.methods\r\n          .setForSale(2020312708, caver.utils.toPeb(\"1\", \"peb\"))\r\n          .encodeABI(),\r\n        gas: \"500000\",\r\n        value: caver.utils.toPeb(\"0\", \"KLAY\"), // payable 타입일때는 1\r\n      });\r\n\r\n    caver.klay\r\n      .sendTransaction({\r\n        senderRawTransaction: senderRawTransaction,\r\n        feePayer: feePayer.address,\r\n      })\r\n      .then(function (receipt) {\r\n        if (receipt.transactionHash) {\r\n          console.log(receipt.transactionHash);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={approve}>컨트랙트에 판매권한 주기</Button>\r\n      <br />\r\n      <Button onClick={cancelApprove}>컨트랙트에 판매 권한 취소</Button>\r\n      <br />\r\n      <Button onClick={sellToken}>내 토큰 판매하기</Button>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sell;\r\n"]},"metadata":{},"sourceType":"module"}