{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimyo\\\\skkrypto project\\\\frontend\\\\src\\\\pages\\\\Purchase.js\";\nimport Caver from \"caver-js\";\nimport { Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { TSCONTRACT, YTTCONTRACT } from \"../variables\";\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\nimport TS_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/TOKENSALES_ADDRESS.json\";\nimport TS_ABI from \"../contractInfo/SKKRYPTOCONTRACT/TOKENSALES_ABI.json\";\nimport ST_ABI from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ABI.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Sell = () => {\n  const caver = new Caver(window.klaytn);\n  const STCONTRACT = new caver.klay.Contract(ST_ABI, ST_ADDRESS); // window.klaytn.enable();\n\n  const feePayer = caver.klay.accounts.wallet.add( //클레이튼 개인키로 추가해줍니다.\n  \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\");\n\n  const sellToken = async () => {\n    const {\n      rawTransaction: senderRawTransaction\n    } = await caver.klay.signTransaction({\n      type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\n      from: window.klaytn.selectedAddress,\n      to: TS_ADDRESS,\n      data: TSCONTRACT.methods.purchaseToken(2020312708).encodeABI(),\n      gas: \"500000\",\n      value: caver.utils.toPeb(\"1\", \"peb\")\n    });\n    caver.klay.sendTransaction({\n      senderRawTransaction: senderRawTransaction,\n      feePayer: feePayer.address\n    }).then(function (receipt) {\n      if (receipt.transactionHash) {\n        console.log(receipt.transactionHash);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: sellToken,\n      children: \"\\uB0B4 \\uD1A0\\uD070 \\uAD6C\\uB9E4\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Sell;\nexport default Sell;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sell\");","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/frontend/src/pages/Purchase.js"],"names":["Caver","Button","useEffect","TSCONTRACT","YTTCONTRACT","ST_ADDRESS","TS_ADDRESS","TS_ABI","ST_ABI","Sell","caver","window","klaytn","STCONTRACT","klay","Contract","feePayer","accounts","wallet","add","sellToken","rawTransaction","senderRawTransaction","signTransaction","type","from","selectedAddress","to","data","methods","purchaseToken","encodeABI","gas","value","utils","toPeb","sendTransaction","address","then","receipt","transactionHash","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AACA,OAAOC,UAAP,MAAuB,0DAAvB;AACA,OAAOC,UAAP,MAAuB,0DAAvB;AACA,OAAOC,MAAP,MAAmB,sDAAnB;AACA,OAAOC,MAAP,MAAmB,sDAAnB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,KAAK,GAAG,IAAIV,KAAJ,CAAUW,MAAM,CAACC,MAAjB,CAAd;AACA,QAAMC,UAAU,GAAG,IAAIH,KAAK,CAACI,IAAN,CAAWC,QAAf,CAAwBP,MAAxB,EAAgCH,UAAhC,CAAnB,CAFiB,CAGjB;;AAEA,QAAMW,QAAQ,GAAGN,KAAK,CAACI,IAAN,CAAWG,QAAX,CAAoBC,MAApB,CAA2BC,GAA3B,EACf;AACA,sEAFe,CAAjB;;AAKA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAM;AAAEC,MAAAA,cAAc,EAAEC;AAAlB,QACJ,MAAMZ,KAAK,CAACI,IAAN,CAAWS,eAAX,CAA2B;AAC/BC,MAAAA,IAAI,EAAE,wCADyB;AAE/BC,MAAAA,IAAI,EAAEd,MAAM,CAACC,MAAP,CAAcc,eAFW;AAG/BC,MAAAA,EAAE,EAAErB,UAH2B;AAI/BsB,MAAAA,IAAI,EAAEzB,UAAU,CAAC0B,OAAX,CAAmBC,aAAnB,CAAiC,UAAjC,EAA6CC,SAA7C,EAJyB;AAK/BC,MAAAA,GAAG,EAAE,QAL0B;AAM/BC,MAAAA,KAAK,EAAEvB,KAAK,CAACwB,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,KAAvB;AANwB,KAA3B,CADR;AAUAzB,IAAAA,KAAK,CAACI,IAAN,CACGsB,eADH,CACmB;AACfd,MAAAA,oBAAoB,EAAEA,oBADP;AAEfN,MAAAA,QAAQ,EAAEA,QAAQ,CAACqB;AAFJ,KADnB,EAKGC,IALH,CAKQ,UAAUC,OAAV,EAAmB;AACvB,UAAIA,OAAO,CAACC,eAAZ,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACC,eAApB;AACD;AACF,KATH;AAUD,GArBD;;AAuBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEpB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAvCD;;KAAMX,I;AAyCN,eAAeA,IAAf","sourcesContent":["import Caver from \"caver-js\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { TSCONTRACT, YTTCONTRACT } from \"../variables\";\r\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\r\nimport TS_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/TOKENSALES_ADDRESS.json\";\r\nimport TS_ABI from \"../contractInfo/SKKRYPTOCONTRACT/TOKENSALES_ABI.json\";\r\nimport ST_ABI from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ABI.json\";\r\n\r\nconst Sell = () => {\r\n  const caver = new Caver(window.klaytn);\r\n  const STCONTRACT = new caver.klay.Contract(ST_ABI, ST_ADDRESS);\r\n  // window.klaytn.enable();\r\n\r\n  const feePayer = caver.klay.accounts.wallet.add(\r\n    //클레이튼 개인키로 추가해줍니다.\r\n    \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\"\r\n  );\r\n\r\n  const sellToken = async () => {\r\n    const { rawTransaction: senderRawTransaction } =\r\n      await caver.klay.signTransaction({\r\n        type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\r\n        from: window.klaytn.selectedAddress,\r\n        to: TS_ADDRESS,\r\n        data: TSCONTRACT.methods.purchaseToken(2020312708).encodeABI(),\r\n        gas: \"500000\",\r\n        value: caver.utils.toPeb(\"1\", \"peb\"),\r\n      });\r\n\r\n    caver.klay\r\n      .sendTransaction({\r\n        senderRawTransaction: senderRawTransaction,\r\n        feePayer: feePayer.address,\r\n      })\r\n      .then(function (receipt) {\r\n        if (receipt.transactionHash) {\r\n          console.log(receipt.transactionHash);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={sellToken}>내 토큰 구매하기</Button>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sell;\r\n"]},"metadata":{},"sourceType":"module"}