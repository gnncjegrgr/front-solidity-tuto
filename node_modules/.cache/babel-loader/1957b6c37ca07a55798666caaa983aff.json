{"ast":null,"code":"'use strict';\n\nconst {\n  objectToQuery\n} = require('../../lib/querystring');\n\nconst configure = require('../../lib/configure');\n\nconst {\n  ok\n} = require('../../lib/fetch');\n\nconst {\n  toFormData\n} = require('./form-data');\n\nmodule.exports = configure(_ref => {\n  let {\n    fetch,\n    apiUrl,\n    apiPath,\n    headers\n  } = _ref;\n  return async (path, input, options) => {\n    options = options || {};\n    const qs = objectToQuery({\n      arg: path,\n      'stream-channels': true,\n      'cid-version': options.cidVersion,\n      count: options.count,\n      create: options.create,\n      hash: options.hashAlg,\n      offset: options.offset,\n      parents: options.parents,\n      'raw-leaves': options.rawLeaves,\n      truncate: options.truncate,\n      ...(options.qs || {})\n    });\n    const url = `${apiUrl}${apiPath}/files/write${qs}`;\n    const res = await ok(fetch(url, {\n      method: 'POST',\n      signal: options.signal,\n      headers: options.headers || headers,\n      body: await toFormData(path, input)\n    }));\n    return res.text();\n  };\n});","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/ipfs-http-client-lite/src/files/write/index.js"],"names":["objectToQuery","require","configure","ok","toFormData","module","exports","fetch","apiUrl","apiPath","headers","path","input","options","qs","arg","cidVersion","count","create","hash","hashAlg","offset","parents","rawLeaves","truncate","url","res","method","signal","body","text"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,uBAAD,CAAjC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAASF,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAAiBH,OAAO,CAAC,aAAD,CAA9B;;AAEAI,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,QAAyC;AAAA,MAAxC;AAAEK,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,GAAwC;AAClE,SAAO,OAAOC,IAAP,EAAaC,KAAb,EAAoBC,OAApB,KAAgC;AACrCA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMC,EAAE,GAAGd,aAAa,CAAC;AACvBe,MAAAA,GAAG,EAAEJ,IADkB;AAEvB,yBAAmB,IAFI;AAGvB,qBAAeE,OAAO,CAACG,UAHA;AAIvBC,MAAAA,KAAK,EAAEJ,OAAO,CAACI,KAJQ;AAKvBC,MAAAA,MAAM,EAAEL,OAAO,CAACK,MALO;AAMvBC,MAAAA,IAAI,EAAEN,OAAO,CAACO,OANS;AAOvBC,MAAAA,MAAM,EAAER,OAAO,CAACQ,MAPO;AAQvBC,MAAAA,OAAO,EAAET,OAAO,CAACS,OARM;AASvB,oBAAcT,OAAO,CAACU,SATC;AAUvBC,MAAAA,QAAQ,EAAEX,OAAO,CAACW,QAVK;AAWvB,UAAIX,OAAO,CAACC,EAAR,IAAc,EAAlB;AAXuB,KAAD,CAAxB;AAcA,UAAMW,GAAG,GAAI,GAAEjB,MAAO,GAAEC,OAAQ,eAAcK,EAAG,EAAjD;AACA,UAAMY,GAAG,GAAG,MAAMvB,EAAE,CAACI,KAAK,CAACkB,GAAD,EAAM;AAC9BE,MAAAA,MAAM,EAAE,MADsB;AAE9BC,MAAAA,MAAM,EAAEf,OAAO,CAACe,MAFc;AAG9BlB,MAAAA,OAAO,EAAEG,OAAO,CAACH,OAAR,IAAmBA,OAHE;AAI9BmB,MAAAA,IAAI,EAAE,MAAMzB,UAAU,CAACO,IAAD,EAAOC,KAAP;AAJQ,KAAN,CAAN,CAApB;AAOA,WAAOc,GAAG,CAACI,IAAJ,EAAP;AACD,GA1BD;AA2BD,CA5ByB,CAA1B","sourcesContent":["'use strict'\r\n\r\nconst { objectToQuery } = require('../../lib/querystring')\r\nconst configure = require('../../lib/configure')\r\nconst { ok } = require('../../lib/fetch')\r\nconst { toFormData } = require('./form-data')\r\n\r\nmodule.exports = configure(({ fetch, apiUrl, apiPath, headers }) => {\r\n  return async (path, input, options) => {\r\n    options = options || {}\r\n\r\n    const qs = objectToQuery({\r\n      arg: path,\r\n      'stream-channels': true,\r\n      'cid-version': options.cidVersion,\r\n      count: options.count,\r\n      create: options.create,\r\n      hash: options.hashAlg,\r\n      offset: options.offset,\r\n      parents: options.parents,\r\n      'raw-leaves': options.rawLeaves,\r\n      truncate: options.truncate,\r\n      ...(options.qs || {})\r\n    })\r\n\r\n    const url = `${apiUrl}${apiPath}/files/write${qs}`\r\n    const res = await ok(fetch(url, {\r\n      method: 'POST',\r\n      signal: options.signal,\r\n      headers: options.headers || headers,\r\n      body: await toFormData(path, input)\r\n    }))\r\n\r\n    return res.text()\r\n  }\r\n})\r\n"]},"metadata":{},"sourceType":"script"}