{"ast":null,"code":"import Caver from \"caver-js\";\nimport { Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { STCONTRACT } from \"../variables\";\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MakeNFT = () => {\n  const caver = new Caver(window.klaytn);\n  const feePayer = caver.klay.accounts.wallet.add( //클레이튼 개인키로 추가해줍니다.\n  \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\");\n\n  const makeNFT = async () => {\n    const {\n      rawTransaction: senderRawTransaction\n    } = await caver.klay.signTransaction({\n      type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\n      from: window.klaytn.selectedAddress,\n      to: ST_ADDRESS,\n      data: STCONTRACT.methods.mintSToken(\"김용\", 7, 2020312708, \"개발팀\", \"2021\").encodeABI(),\n      gas: \"500000\",\n      value: caver.utils.toPeb(\"0\", \"KLAY\") //payable 타입이라면 \"0\"=>\"1\"\n\n    });\n    caver.klay.sendTransaction({\n      senderRawTransaction: senderRawTransaction,\n      feePayer: feePayer.address\n    }).then(function (receipt) {\n      console.log(receipt.transactionHash);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = MakeNFT;\nexport default MakeNFT;\n\nvar _c;\n\n$RefreshReg$(_c, \"MakeNFT\");","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/frontend/src/pages/MakeNFT.js"],"names":["Caver","Button","useEffect","STCONTRACT","ST_ADDRESS","MakeNFT","caver","window","klaytn","feePayer","klay","accounts","wallet","add","makeNFT","rawTransaction","senderRawTransaction","signTransaction","type","from","selectedAddress","to","data","methods","mintSToken","encodeABI","gas","value","utils","toPeb","sendTransaction","address","then","receipt","console","log","transactionHash"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,0DAAvB;;;;AACA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,KAAK,GAAG,IAAIN,KAAJ,CAAUO,MAAM,CAACC,MAAjB,CAAd;AAEA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,GAA3B,EACf;AACA,sEAFe,CAAjB;;AAKA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAM;AAAEC,MAAAA,cAAc,EAAEC;AAAlB,QACJ,MAAMV,KAAK,CAACI,IAAN,CAAWO,eAAX,CAA2B;AAC/BC,MAAAA,IAAI,EAAE,wCADyB;AAE/BC,MAAAA,IAAI,EAAEZ,MAAM,CAACC,MAAP,CAAcY,eAFW;AAG/BC,MAAAA,EAAE,EAAEjB,UAH2B;AAI/BkB,MAAAA,IAAI,EAAEnB,UAAU,CAACoB,OAAX,CACHC,UADG,CACQ,IADR,EACc,CADd,EACiB,UADjB,EAC6B,KAD7B,EACoC,MADpC,EAEHC,SAFG,EAJyB;AAO/BC,MAAAA,GAAG,EAAE,QAP0B;AAQ/BC,MAAAA,KAAK,EAAErB,KAAK,CAACsB,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,MAAvB,CARwB,CAQQ;;AARR,KAA3B,CADR;AAWAvB,IAAAA,KAAK,CAACI,IAAN,CACGoB,eADH,CACmB;AACfd,MAAAA,oBAAoB,EAAEA,oBADP;AAEfP,MAAAA,QAAQ,EAAEA,QAAQ,CAACsB;AAFJ,KADnB,EAKGC,IALH,CAKQ,UAAUC,OAAV,EAAmB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,eAApB;AACD,KAPH;AAQD,GApBD;;AAsBA,sBAAO,qCAAP;AACD,CA/BD;;KAAM/B,O;AAiCN,eAAeA,OAAf","sourcesContent":["import Caver from \"caver-js\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { STCONTRACT } from \"../variables\";\r\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\r\nconst MakeNFT = () => {\r\n  const caver = new Caver(window.klaytn);\r\n\r\n  const feePayer = caver.klay.accounts.wallet.add(\r\n    //클레이튼 개인키로 추가해줍니다.\r\n    \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\"\r\n  );\r\n\r\n  const makeNFT = async () => {\r\n    const { rawTransaction: senderRawTransaction } =\r\n      await caver.klay.signTransaction({\r\n        type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\r\n        from: window.klaytn.selectedAddress,\r\n        to: ST_ADDRESS,\r\n        data: STCONTRACT.methods\r\n          .mintSToken(\"김용\", 7, 2020312708, \"개발팀\", \"2021\")\r\n          .encodeABI(),\r\n        gas: \"500000\",\r\n        value: caver.utils.toPeb(\"0\", \"KLAY\"), //payable 타입이라면 \"0\"=>\"1\"\r\n      });\r\n    caver.klay\r\n      .sendTransaction({\r\n        senderRawTransaction: senderRawTransaction,\r\n        feePayer: feePayer.address,\r\n      })\r\n      .then(function (receipt) {\r\n        console.log(receipt.transactionHash);\r\n      });\r\n  };\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default MakeNFT;\r\n"]},"metadata":{},"sourceType":"module"}