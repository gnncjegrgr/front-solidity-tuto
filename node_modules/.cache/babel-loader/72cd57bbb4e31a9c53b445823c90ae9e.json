{"ast":null,"code":"import Caver from \"caver-js\";\nimport { Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { STCONTRACT, TSCONTRACT } from \"../variables\";\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\nimport TS_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/TOKENSALES_ADDRESS.json\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Purchase = async () => {\n  const caver = new Caver(window.klaytn);\n  const feePayer = caver.klay.accounts.wallet.add( //클레이튼 개인키로 추가해줍니다.\n  \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\");\n  const {\n    rawTransaction: senderRawTransaction\n  } = await caver.klay.signTransaction({\n    type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\n    from: window.klaytn.selectedAddress,\n    to: TS_ADDRESS,\n    data: TSCONTRACT.methods.purchaseToken(2020312708, caver.utils.toPeb(\"1\", \"peb\")).encodeABI(),\n    gas: \"500000\",\n    value: caver.utils.toPeb(\"1\", \"peb\") // Sell.js에서 토큰 가격이 1peb이기 때문에 이렇게 설정\n\n  });\n  caver.klay.sendTransaction({\n    senderRawTransaction: senderRawTransaction,\n    feePayer: feePayer.address\n  }).then(function (receipt) {\n    if (receipt.transactionHash) {\n      console.log(receipt.transactionHash);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Purchase;\nexport default Purchase;\n\nvar _c;\n\n$RefreshReg$(_c, \"Purchase\");","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/frontend/src/pages/Purchase.js"],"names":["Caver","Button","useEffect","STCONTRACT","TSCONTRACT","ST_ADDRESS","TS_ADDRESS","Purchase","caver","window","klaytn","feePayer","klay","accounts","wallet","add","rawTransaction","senderRawTransaction","signTransaction","type","from","selectedAddress","to","data","methods","purchaseToken","utils","toPeb","encodeABI","gas","value","sendTransaction","address","then","receipt","transactionHash","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,cAAvC;AACA,OAAOC,UAAP,MAAuB,0DAAvB;AACA,OAAOC,UAAP,MAAuB,0DAAvB;;;;AAEA,MAAMC,QAAQ,GAAG,YAAY;AAC3B,QAAMC,KAAK,GAAG,IAAIR,KAAJ,CAAUS,MAAM,CAACC,MAAjB,CAAd;AAEA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAWC,QAAX,CAAoBC,MAApB,CAA2BC,GAA3B,EACf;AACA,sEAFe,CAAjB;AAKA,QAAM;AAAEC,IAAAA,cAAc,EAAEC;AAAlB,MACJ,MAAMT,KAAK,CAACI,IAAN,CAAWM,eAAX,CAA2B;AAC/BC,IAAAA,IAAI,EAAE,wCADyB;AAE/BC,IAAAA,IAAI,EAAEX,MAAM,CAACC,MAAP,CAAcW,eAFW;AAG/BC,IAAAA,EAAE,EAAEhB,UAH2B;AAI/BiB,IAAAA,IAAI,EAAEnB,UAAU,CAACoB,OAAX,CACHC,aADG,CACW,UADX,EACuBjB,KAAK,CAACkB,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,KAAvB,CADvB,EAEHC,SAFG,EAJyB;AAO/BC,IAAAA,GAAG,EAAE,QAP0B;AAQ/BC,IAAAA,KAAK,EAAEtB,KAAK,CAACkB,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,KAAvB,CARwB,CAQO;;AARP,GAA3B,CADR;AAYAnB,EAAAA,KAAK,CAACI,IAAN,CACGmB,eADH,CACmB;AACfd,IAAAA,oBAAoB,EAAEA,oBADP;AAEfN,IAAAA,QAAQ,EAAEA,QAAQ,CAACqB;AAFJ,GADnB,EAKGC,IALH,CAKQ,UAAUC,OAAV,EAAmB;AACvB,QAAIA,OAAO,CAACC,eAAZ,EAA6B;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACC,eAApB;AACD;AACF,GATH;AAWA,sBAAO,qCAAP;AACD,CAhCD;;KAAM5B,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import Caver from \"caver-js\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { STCONTRACT, TSCONTRACT } from \"../variables\";\r\nimport ST_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/STCONTRACT_ADDRESS.json\";\r\nimport TS_ADDRESS from \"../contractInfo/SKKRYPTOCONTRACT/TOKENSALES_ADDRESS.json\";\r\n\r\nconst Purchase = async () => {\r\n  const caver = new Caver(window.klaytn);\r\n\r\n  const feePayer = caver.klay.accounts.wallet.add(\r\n    //클레이튼 개인키로 추가해줍니다.\r\n    \"0x8cafa33df8c1740720bc4815ce7c7cd61d18aaf396bb2a3da5e197f0c7b85aff\"\r\n  );\r\n\r\n  const { rawTransaction: senderRawTransaction } =\r\n    await caver.klay.signTransaction({\r\n      type: \"FEE_DELEGATED_SMART_CONTRACT_EXECUTION\",\r\n      from: window.klaytn.selectedAddress,\r\n      to: TS_ADDRESS,\r\n      data: TSCONTRACT.methods\r\n        .purchaseToken(2020312708, caver.utils.toPeb(\"1\", \"peb\"))\r\n        .encodeABI(),\r\n      gas: \"500000\",\r\n      value: caver.utils.toPeb(\"1\", \"peb\"), // Sell.js에서 토큰 가격이 1peb이기 때문에 이렇게 설정\r\n    });\r\n\r\n  caver.klay\r\n    .sendTransaction({\r\n      senderRawTransaction: senderRawTransaction,\r\n      feePayer: feePayer.address,\r\n    })\r\n    .then(function (receipt) {\r\n      if (receipt.transactionHash) {\r\n        console.log(receipt.transactionHash);\r\n      }\r\n    });\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Purchase;\r\n"]},"metadata":{},"sourceType":"module"}