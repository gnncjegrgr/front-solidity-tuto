{"ast":null,"code":"/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\nconst {\n  TX_TYPE_STRING,\n  typeDetectionFromRLPEncoding\n} = require('../transactionHelper/transactionHelper');\n\nconst LegacyTransaction = require('../transactionTypes/legacyTransaction/legacyTransaction');\n\nconst ValueTransfer = require('../transactionTypes/valueTransfer/valueTransfer');\n\nconst FeeDelegatedValueTransfer = require('../transactionTypes/valueTransfer/feeDelegatedValueTransfer');\n\nconst FeeDelegatedValueTransferWithRatio = require('../transactionTypes/valueTransfer/feeDelegatedValueTransferWithRatio');\n\nconst ValueTransferMemo = require('../transactionTypes/valueTransferMemo/valueTransferMemo');\n\nconst FeeDelegatedValueTransferMemo = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemo');\n\nconst FeeDelegatedValueTransferMemoWithRatio = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemoWithRatio');\n\nconst AccountUpdate = require('../transactionTypes/accountUpdate/accountUpdate');\n\nconst FeeDelegatedAccountUpdate = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdate');\n\nconst FeeDelegatedAccountUpdateWithRatio = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdateWithRatio');\n\nconst SmartContractDeploy = require('../transactionTypes/smartContractDeploy/smartContractDeploy');\n\nconst FeeDelegatedSmartContractDeploy = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeploy');\n\nconst FeeDelegatedSmartContractDeployWithRatio = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeployWithRatio');\n\nconst SmartContractExecution = require('../transactionTypes/smartContractExecution/smartContractExecution');\n\nconst FeeDelegatedSmartContractExecution = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecution');\n\nconst FeeDelegatedSmartContractExecutionWithRatio = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecutionWithRatio');\n\nconst Cancel = require('../transactionTypes/cancel/cancel');\n\nconst FeeDelegatedCancel = require('../transactionTypes/cancel/feeDelegatedCancel');\n\nconst FeeDelegatedCancelWithRatio = require('../transactionTypes/cancel/feeDelegatedCancelWithRatio');\n\nconst ChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/chainDataAnchoring');\n\nconst FeeDelegatedChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoring');\n\nconst FeeDelegatedChainDataAnchoringWithRatio = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoringWithRatio');\n/**\r\n * Representing a transaction decoder.\r\n * @class\r\n * @hideconstructor\r\n */\n\n\nclass TransactionDecoder {\n  /**\r\n   * Decodes RLP-encoded transaction string and returns a Transaction instance.\r\n   *\r\n   * @example\r\n   * const tx = caver.transaction.decode('0x{RLP-encoded transaction string}')\r\n   *\r\n   * @alias module:Transaction.decode\r\n   *\r\n   * @param {string} rlpEncoded - An RLP-encoded transaction string to decode.\r\n   * @return {module:Transaction.Transaction}\r\n   */\n  static decode(rlpEncoded) {\n    const type = typeDetectionFromRLPEncoding(rlpEncoded);\n\n    switch (type) {\n      case TX_TYPE_STRING.TxTypeLegacyTransaction:\n        return LegacyTransaction.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeValueTransfer:\n        return ValueTransfer.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\n        return FeeDelegatedValueTransfer.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\n        return FeeDelegatedValueTransferWithRatio.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeValueTransferMemo:\n        return ValueTransferMemo.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\n        return FeeDelegatedValueTransferMemo.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\n        return FeeDelegatedValueTransferMemoWithRatio.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeAccountUpdate:\n        return AccountUpdate.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\n        return FeeDelegatedAccountUpdate.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\n        return FeeDelegatedAccountUpdateWithRatio.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeSmartContractDeploy:\n        return SmartContractDeploy.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\n        return FeeDelegatedSmartContractDeploy.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\n        return FeeDelegatedSmartContractDeployWithRatio.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeSmartContractExecution:\n        return SmartContractExecution.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\n        return FeeDelegatedSmartContractExecution.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\n        return FeeDelegatedSmartContractExecutionWithRatio.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeCancel:\n        return Cancel.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\n        return FeeDelegatedCancel.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\n        return FeeDelegatedCancelWithRatio.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeChainDataAnchoring:\n        return ChainDataAnchoring.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\n        return FeeDelegatedChainDataAnchoring.decode(rlpEncoded);\n\n      case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\n        return FeeDelegatedChainDataAnchoringWithRatio.decode(rlpEncoded);\n    }\n  }\n\n}\n\nmodule.exports = TransactionDecoder;","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/caver-js/packages/caver-transaction/src/transactionDecoder/transactionDecoder.js"],"names":["TX_TYPE_STRING","typeDetectionFromRLPEncoding","require","LegacyTransaction","ValueTransfer","FeeDelegatedValueTransfer","FeeDelegatedValueTransferWithRatio","ValueTransferMemo","FeeDelegatedValueTransferMemo","FeeDelegatedValueTransferMemoWithRatio","AccountUpdate","FeeDelegatedAccountUpdate","FeeDelegatedAccountUpdateWithRatio","SmartContractDeploy","FeeDelegatedSmartContractDeploy","FeeDelegatedSmartContractDeployWithRatio","SmartContractExecution","FeeDelegatedSmartContractExecution","FeeDelegatedSmartContractExecutionWithRatio","Cancel","FeeDelegatedCancel","FeeDelegatedCancelWithRatio","ChainDataAnchoring","FeeDelegatedChainDataAnchoring","FeeDelegatedChainDataAnchoringWithRatio","TransactionDecoder","decode","rlpEncoded","type","TxTypeLegacyTransaction","TxTypeValueTransfer","TxTypeFeeDelegatedValueTransfer","TxTypeFeeDelegatedValueTransferWithRatio","TxTypeValueTransferMemo","TxTypeFeeDelegatedValueTransferMemo","TxTypeFeeDelegatedValueTransferMemoWithRatio","TxTypeAccountUpdate","TxTypeFeeDelegatedAccountUpdate","TxTypeFeeDelegatedAccountUpdateWithRatio","TxTypeSmartContractDeploy","TxTypeFeeDelegatedSmartContractDeploy","TxTypeFeeDelegatedSmartContractDeployWithRatio","TxTypeSmartContractExecution","TxTypeFeeDelegatedSmartContractExecution","TxTypeFeeDelegatedSmartContractExecutionWithRatio","TxTypeCancel","TxTypeFeeDelegatedCancel","TxTypeFeeDelegatedCancelWithRatio","TxTypeChainDataAnchoring","TxTypeFeeDelegatedChainDataAnchoring","TxTypeFeeDelegatedChainDataAnchoringWithRatio","module","exports"],"mappings":"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","sourcesContent":["/*\r\n    Copyright 2020 The caver-js Authors\r\n    This file is part of the caver-js library.\r\n\r\n    The caver-js library is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    The caver-js library is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n\r\nconst { TX_TYPE_STRING, typeDetectionFromRLPEncoding } = require('../transactionHelper/transactionHelper')\r\nconst LegacyTransaction = require('../transactionTypes/legacyTransaction/legacyTransaction')\r\nconst ValueTransfer = require('../transactionTypes/valueTransfer/valueTransfer')\r\nconst FeeDelegatedValueTransfer = require('../transactionTypes/valueTransfer/feeDelegatedValueTransfer')\r\nconst FeeDelegatedValueTransferWithRatio = require('../transactionTypes/valueTransfer/feeDelegatedValueTransferWithRatio')\r\nconst ValueTransferMemo = require('../transactionTypes/valueTransferMemo/valueTransferMemo')\r\nconst FeeDelegatedValueTransferMemo = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemo')\r\nconst FeeDelegatedValueTransferMemoWithRatio = require('../transactionTypes/valueTransferMemo/feeDelegatedValueTransferMemoWithRatio')\r\nconst AccountUpdate = require('../transactionTypes/accountUpdate/accountUpdate')\r\nconst FeeDelegatedAccountUpdate = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdate')\r\nconst FeeDelegatedAccountUpdateWithRatio = require('../transactionTypes/accountUpdate/feeDelegatedAccountUpdateWithRatio')\r\nconst SmartContractDeploy = require('../transactionTypes/smartContractDeploy/smartContractDeploy')\r\nconst FeeDelegatedSmartContractDeploy = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeploy')\r\nconst FeeDelegatedSmartContractDeployWithRatio = require('../transactionTypes/smartContractDeploy/feeDelegatedSmartContractDeployWithRatio')\r\nconst SmartContractExecution = require('../transactionTypes/smartContractExecution/smartContractExecution')\r\nconst FeeDelegatedSmartContractExecution = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecution')\r\nconst FeeDelegatedSmartContractExecutionWithRatio = require('../transactionTypes/smartContractExecution/feeDelegatedSmartContractExecutionWithRatio')\r\nconst Cancel = require('../transactionTypes/cancel/cancel')\r\nconst FeeDelegatedCancel = require('../transactionTypes/cancel/feeDelegatedCancel')\r\nconst FeeDelegatedCancelWithRatio = require('../transactionTypes/cancel/feeDelegatedCancelWithRatio')\r\nconst ChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/chainDataAnchoring')\r\nconst FeeDelegatedChainDataAnchoring = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoring')\r\nconst FeeDelegatedChainDataAnchoringWithRatio = require('../transactionTypes/chainDataAnchoring/feeDelegatedChainDataAnchoringWithRatio')\r\n\r\n/**\r\n * Representing a transaction decoder.\r\n * @class\r\n * @hideconstructor\r\n */\r\nclass TransactionDecoder {\r\n    /**\r\n     * Decodes RLP-encoded transaction string and returns a Transaction instance.\r\n     *\r\n     * @example\r\n     * const tx = caver.transaction.decode('0x{RLP-encoded transaction string}')\r\n     *\r\n     * @alias module:Transaction.decode\r\n     *\r\n     * @param {string} rlpEncoded - An RLP-encoded transaction string to decode.\r\n     * @return {module:Transaction.Transaction}\r\n     */\r\n    static decode(rlpEncoded) {\r\n        const type = typeDetectionFromRLPEncoding(rlpEncoded)\r\n\r\n        switch (type) {\r\n            case TX_TYPE_STRING.TxTypeLegacyTransaction:\r\n                return LegacyTransaction.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeValueTransfer:\r\n                return ValueTransfer.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\r\n                return FeeDelegatedValueTransfer.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\r\n                return FeeDelegatedValueTransferWithRatio.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeValueTransferMemo:\r\n                return ValueTransferMemo.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\r\n                return FeeDelegatedValueTransferMemo.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\r\n                return FeeDelegatedValueTransferMemoWithRatio.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeAccountUpdate:\r\n                return AccountUpdate.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\r\n                return FeeDelegatedAccountUpdate.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\r\n                return FeeDelegatedAccountUpdateWithRatio.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeSmartContractDeploy:\r\n                return SmartContractDeploy.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\r\n                return FeeDelegatedSmartContractDeploy.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\r\n                return FeeDelegatedSmartContractDeployWithRatio.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeSmartContractExecution:\r\n                return SmartContractExecution.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\r\n                return FeeDelegatedSmartContractExecution.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\r\n                return FeeDelegatedSmartContractExecutionWithRatio.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeCancel:\r\n                return Cancel.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\r\n                return FeeDelegatedCancel.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\r\n                return FeeDelegatedCancelWithRatio.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeChainDataAnchoring:\r\n                return ChainDataAnchoring.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\r\n                return FeeDelegatedChainDataAnchoring.decode(rlpEncoded)\r\n            case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\r\n                return FeeDelegatedChainDataAnchoringWithRatio.decode(rlpEncoded)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = TransactionDecoder\r\n"]},"metadata":{},"sourceType":"script"}