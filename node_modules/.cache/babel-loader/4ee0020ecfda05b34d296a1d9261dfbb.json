{"ast":null,"code":"\"use strict\";\n\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\n\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n  const fetcher = \"Web3LegacyFetcher\";\n  return function (method, params) {\n    // Metamask complains about eth_sign (and on some versions hangs)\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    const request = {\n      method: method,\n      params: params,\n      id: _nextId++,\n      jsonrpc: \"2.0\"\n    };\n    return new Promise((resolve, reject) => {\n      this.emit(\"debug\", {\n        action: \"request\",\n        fetcher,\n        request: deepCopy(request),\n        provider: this\n      });\n      sendFunc(request, (error, response) => {\n        if (error) {\n          this.emit(\"debug\", {\n            action: \"response\",\n            fetcher,\n            error,\n            request,\n            provider: this\n          });\n          return reject(error);\n        }\n\n        this.emit(\"debug\", {\n          action: \"response\",\n          fetcher,\n          request,\n          response,\n          provider: this\n        });\n\n        if (response.error) {\n          const error = new Error(response.error.message);\n          error.code = response.error.code;\n          error.data = response.error.data;\n          return reject(error);\n        }\n\n        resolve(response.result);\n      });\n    });\n  };\n}\n\nfunction buildEip1193Fetcher(provider) {\n  return function (method, params) {\n    if (params == null) {\n      params = [];\n    } // Metamask complains about eth_sign (and on some versions hangs)\n\n\n    if (method == \"eth_sign\" && (provider.isMetaMask || provider.isStatus)) {\n      // https://github.com/ethereum/go-ethereum/wiki/Management-APIs#personal_sign\n      method = \"personal_sign\";\n      params = [params[1], params[0]];\n    }\n\n    const request = {\n      method,\n      params\n    };\n    this.emit(\"debug\", {\n      action: \"request\",\n      fetcher: \"Eip1193Fetcher\",\n      request: deepCopy(request),\n      provider: this\n    });\n    return provider.request(request).then(response => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        response,\n        provider: this\n      });\n      return response;\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        fetcher: \"Eip1193Fetcher\",\n        request,\n        error,\n        provider: this\n      });\n      throw error;\n    });\n  };\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n  constructor(provider, network) {\n    logger.checkNew(new.target, Web3Provider);\n\n    if (provider == null) {\n      logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n    }\n\n    let path = null;\n    let jsonRpcFetchFunc = null;\n    let subprovider = null;\n\n    if (typeof provider === \"function\") {\n      path = \"unknown:\";\n      jsonRpcFetchFunc = provider;\n    } else {\n      path = provider.host || provider.path || \"\";\n\n      if (!path && provider.isMetaMask) {\n        path = \"metamask\";\n      }\n\n      subprovider = provider;\n\n      if (provider.request) {\n        if (path === \"\") {\n          path = \"eip-1193:\";\n        }\n\n        jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n      } else if (provider.sendAsync) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n      } else if (provider.send) {\n        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n      } else {\n        logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n      }\n\n      if (!path) {\n        path = \"unknown:\";\n      }\n    }\n\n    super(path, network);\n    defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n    defineReadOnly(this, \"provider\", subprovider);\n  }\n\n  send(method, params) {\n    return this.jsonRpcFetchFunc(method, params);\n  }\n\n}","map":{"version":3,"mappings":"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","names":["deepCopy","defineReadOnly","Logger","version","logger","JsonRpcProvider","_nextId","buildWeb3LegacyFetcher","provider","sendFunc","fetcher","method","params","isMetaMask","isStatus","request","id","jsonrpc","Promise","resolve","reject","emit","action","error","response","Error","message","code","data","result","buildEip1193Fetcher","then","Web3Provider","constructor","network","checkNew","new","target","throwArgumentError","path","jsonRpcFetchFunc","subprovider","host","sendAsync","bind","send"],"sourceRoot":"","sources":["../src.ts/web3-provider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}