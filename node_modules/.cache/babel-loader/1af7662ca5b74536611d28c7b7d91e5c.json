{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _setImmediate = require('./internal/setImmediate');\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\r\n * Calls `callback` on a later loop around the event loop. In Node.js this just\r\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\r\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\r\n * priority events may precede the execution of `callback`.\r\n *\r\n * This is used internally for browser-compatibility purposes.\r\n *\r\n * @name setImmediate\r\n * @static\r\n * @memberOf module:Utils\r\n * @method\r\n * @see [async.nextTick]{@link module:Utils.nextTick}\r\n * @category Util\r\n * @param {Function} callback - The function to call on a later loop around\r\n * the event loop. Invoked with (args...).\r\n * @param {...*} args... - any number of additional arguments to pass to the\r\n * callback on the next tick.\r\n * @example\r\n *\r\n * var call_order = [];\r\n * async.nextTick(function() {\r\n *     call_order.push('two');\r\n *     // call_order now equals ['one','two']\r\n * });\r\n * call_order.push('one');\r\n *\r\n * async.setImmediate(function (a, b, c) {\r\n *     // a, b, and c equal 1, 2, and 3\r\n * }, 1, 2, 3);\r\n */\n\n\nexports.default = _setImmediate2.default;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/async/setImmediate.js"],"names":["Object","defineProperty","exports","value","_setImmediate","require","_setImmediate2","_interopRequireDefault","obj","__esModule","default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,aAAa,GAAGC,OAAO,CAAC,yBAAD,CAA3B;;AAEA,IAAIC,cAAc,GAAGC,sBAAsB,CAACH,aAAD,CAA3C;;AAEA,SAASG,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,OAAO,CAACQ,OAAR,GAAkBJ,cAAc,CAACI,OAAjC;AACAC,MAAM,CAACT,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\n\r\nvar _setImmediate = require('./internal/setImmediate');\r\n\r\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\n/**\r\n * Calls `callback` on a later loop around the event loop. In Node.js this just\r\n * calls `setImmediate`.  In the browser it will use `setImmediate` if\r\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\r\n * priority events may precede the execution of `callback`.\r\n *\r\n * This is used internally for browser-compatibility purposes.\r\n *\r\n * @name setImmediate\r\n * @static\r\n * @memberOf module:Utils\r\n * @method\r\n * @see [async.nextTick]{@link module:Utils.nextTick}\r\n * @category Util\r\n * @param {Function} callback - The function to call on a later loop around\r\n * the event loop. Invoked with (args...).\r\n * @param {...*} args... - any number of additional arguments to pass to the\r\n * callback on the next tick.\r\n * @example\r\n *\r\n * var call_order = [];\r\n * async.nextTick(function() {\r\n *     call_order.push('two');\r\n *     // call_order now equals ['one','two']\r\n * });\r\n * call_order.push('one');\r\n *\r\n * async.setImmediate(function (a, b, c) {\r\n *     // a, b, and c equal 1, 2, and 3\r\n * }, 1, 2, 3);\r\n */\r\nexports.default = _setImmediate2.default;\r\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}