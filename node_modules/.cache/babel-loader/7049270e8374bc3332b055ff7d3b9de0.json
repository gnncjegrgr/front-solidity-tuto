{"ast":null,"code":"'use strict'; // Convert object properties to camel case.\n// NOT recursive!\n// e.g.\n// AgentVersion => agentVersion\n// ID => id\n\nmodule.exports = obj => {\n  if (obj == null) return obj;\n  const caps = /^[A-Z]+$/;\n  return Object.keys(obj).reduce((camelObj, k) => {\n    if (caps.test(k)) {\n      // all caps\n      camelObj[k.toLowerCase()] = obj[k];\n    } else if (caps.test(k[0])) {\n      // pascal\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k];\n    } else {\n      camelObj[k] = obj[k];\n    }\n\n    return camelObj;\n  }, {});\n};","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/ipfs-http-client-lite/src/lib/to-camel.js"],"names":["module","exports","obj","caps","Object","keys","reduce","camelObj","k","test","toLowerCase","slice"],"mappings":"AAAA,a,CAEA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,GAAG,IAAI;AACtB,MAAIA,GAAG,IAAI,IAAX,EAAiB,OAAOA,GAAP;AACjB,QAAMC,IAAI,GAAG,UAAb;AACA,SAAOC,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,MAAjB,CAAwB,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC9C,QAAIL,IAAI,CAACM,IAAL,CAAUD,CAAV,CAAJ,EAAkB;AAAE;AAClBD,MAAAA,QAAQ,CAACC,CAAC,CAACE,WAAF,EAAD,CAAR,GAA4BR,GAAG,CAACM,CAAD,CAA/B;AACD,KAFD,MAEO,IAAIL,IAAI,CAACM,IAAL,CAAUD,CAAC,CAAC,CAAD,CAAX,CAAJ,EAAqB;AAAE;AAC5BD,MAAAA,QAAQ,CAACC,CAAC,CAAC,CAAD,CAAD,CAAKE,WAAL,KAAqBF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAtB,CAAR,GAA4CT,GAAG,CAACM,CAAD,CAA/C;AACD,KAFM,MAEA;AACLD,MAAAA,QAAQ,CAACC,CAAD,CAAR,GAAcN,GAAG,CAACM,CAAD,CAAjB;AACD;;AACD,WAAOD,QAAP;AACD,GATM,EASJ,EATI,CAAP;AAUD,CAbD","sourcesContent":["'use strict'\r\n\r\n// Convert object properties to camel case.\r\n// NOT recursive!\r\n// e.g.\r\n// AgentVersion => agentVersion\r\n// ID => id\r\nmodule.exports = obj => {\r\n  if (obj == null) return obj\r\n  const caps = /^[A-Z]+$/\r\n  return Object.keys(obj).reduce((camelObj, k) => {\r\n    if (caps.test(k)) { // all caps\r\n      camelObj[k.toLowerCase()] = obj[k]\r\n    } else if (caps.test(k[0])) { // pascal\r\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k]\r\n    } else {\r\n      camelObj[k] = obj[k]\r\n    }\r\n    return camelObj\r\n  }, {})\r\n}\r\n"]},"metadata":{},"sourceType":"script"}