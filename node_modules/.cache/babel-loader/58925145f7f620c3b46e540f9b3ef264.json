{"ast":null,"code":"'use strict';\n\nconst cleanCID = require('../utils/clean-cid');\n\nconst v = require('is-ipfs');\n\nconst Stream = require('readable-stream');\n\nconst pump = require('pump');\n\nmodule.exports = send => {\n  return (hash, opts) => {\n    opts = opts || {};\n    const pt = new Stream.PassThrough();\n\n    try {\n      hash = cleanCID(hash);\n    } catch (err) {\n      if (!v.ipfsPath(hash)) {\n        return pt.destroy(err);\n      }\n    }\n\n    const query = {\n      offset: opts.offset,\n      length: opts.length\n    };\n    send({\n      path: 'cat',\n      args: hash,\n      buffer: opts.buffer,\n      qs: query\n    }, (err, stream) => {\n      if (err) {\n        return pt.destroy(err);\n      }\n\n      pump(stream, pt);\n    });\n    return pt;\n  };\n};","map":{"version":3,"sources":["C:/Users/kimyo/skkrypto project/skkrypto-front-solidity/node_modules/ipfs-http-client/src/files-regular/cat-readable-stream.js"],"names":["cleanCID","require","v","Stream","pump","module","exports","send","hash","opts","pt","PassThrough","err","ipfsPath","destroy","query","offset","length","path","args","buffer","qs","stream"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMC,CAAC,GAAGD,OAAO,CAAC,SAAD,CAAjB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,iBAAD,CAAtB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AAEAI,MAAM,CAACC,OAAP,GAAkBC,IAAD,IAAU;AACzB,SAAO,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrBA,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,UAAMC,EAAE,GAAG,IAAIP,MAAM,CAACQ,WAAX,EAAX;;AAEA,QAAI;AACFH,MAAAA,IAAI,GAAGR,QAAQ,CAACQ,IAAD,CAAf;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZ,UAAI,CAACV,CAAC,CAACW,QAAF,CAAWL,IAAX,CAAL,EAAuB;AACrB,eAAOE,EAAE,CAACI,OAAH,CAAWF,GAAX,CAAP;AACD;AACF;;AAED,UAAMG,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAEP,IAAI,CAACO,MADD;AAEZC,MAAAA,MAAM,EAAER,IAAI,CAACQ;AAFD,KAAd;AAKAV,IAAAA,IAAI,CAAC;AAAEW,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,IAAI,EAAEX,IAArB;AAA2BY,MAAAA,MAAM,EAAEX,IAAI,CAACW,MAAxC;AAAgDC,MAAAA,EAAE,EAAEN;AAApD,KAAD,EAA8D,CAACH,GAAD,EAAMU,MAAN,KAAiB;AACjF,UAAIV,GAAJ,EAAS;AAAE,eAAOF,EAAE,CAACI,OAAH,CAAWF,GAAX,CAAP;AAAwB;;AAEnCR,MAAAA,IAAI,CAACkB,MAAD,EAASZ,EAAT,CAAJ;AACD,KAJG,CAAJ;AAMA,WAAOA,EAAP;AACD,GAzBD;AA0BD,CA3BD","sourcesContent":["'use strict'\r\n\r\nconst cleanCID = require('../utils/clean-cid')\r\nconst v = require('is-ipfs')\r\nconst Stream = require('readable-stream')\r\nconst pump = require('pump')\r\n\r\nmodule.exports = (send) => {\r\n  return (hash, opts) => {\r\n    opts = opts || {}\r\n\r\n    const pt = new Stream.PassThrough()\r\n\r\n    try {\r\n      hash = cleanCID(hash)\r\n    } catch (err) {\r\n      if (!v.ipfsPath(hash)) {\r\n        return pt.destroy(err)\r\n      }\r\n    }\r\n\r\n    const query = {\r\n      offset: opts.offset,\r\n      length: opts.length\r\n    }\r\n\r\n    send({ path: 'cat', args: hash, buffer: opts.buffer, qs: query }, (err, stream) => {\r\n      if (err) { return pt.destroy(err) }\r\n\r\n      pump(stream, pt)\r\n    })\r\n\r\n    return pt\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}